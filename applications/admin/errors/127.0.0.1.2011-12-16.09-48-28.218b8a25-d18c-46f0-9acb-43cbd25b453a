(dp1
S'output'
p2
S''
sS'layer'
p3
S'/home/henry/Workspace/invent/final/web2py/applications/admin/controllers/default.py'
p4
sS'code'
p5
S'# coding: utf8\n\nfrom gluon.admin import *\nfrom gluon.fileutils import abspath, read_file, write_file\nfrom glob import glob\nimport shutil\nimport platform\n\nif DEMO_MODE and request.function in [\'change_password\',\'pack\',\'pack_plugin\',\'upgrade_web2py\',\'uninstall\',\'cleanup\',\'compile_app\',\'remove_compiled_app\',\'delete\',\'delete_plugin\',\'create_file\',\'upload_file\',\'update_languages\',\'reload_routes\']:\n    session.flash = T(\'disabled in demo mode\')\n    redirect(URL(\'site\'))\n\nif not is_manager() and request.function in [\'change_password\',\'upgrade_web2py\']:\n    session.flash = T(\'disabled in multi user mode\')\n    redirect(URL(\'site\'))\n\nif FILTER_APPS and request.args(0) and not request.args(0) in FILTER_APPS:\n    session.flash = T(\'disabled in demo mode\')\n    redirect(URL(\'site\'))\n\ndef safe_open(a,b):\n    if DEMO_MODE and \'w\' in b:\n        class tmp:\n            def write(self,data): pass\n        return tmp()\n    return open(a,b)\n\ndef safe_read(a, b=\'r\'):\n    safe_file = safe_open(a, b)\n    try:\n        return safe_file.read()\n    finally:\n        safe_file.close()\n\ndef safe_write(a, value, b=\'w\'):\n    safe_file = safe_open(a, b)\n    try:\n        safe_file.write(value)\n    finally:\n        safe_file.close()\n\ndef get_app(name=None):\n    app = name or request.args(0)\n    if not MULTI_USER_MODE or db(db.app.name==app)(db.app.owner==auth.user.id).count():\n        return app\n    session.flash = \'App does not exist or your are not authorized\'\n    redirect(URL(\'site\'))\n\ndef index():\n    """ Index handler """\n\n    send = request.vars.send\n    if DEMO_MODE:\n        session.authorized = True\n        session.last_time = t0\n    if not send:\n        send = URL(\'site\')\n    if session.authorized:\n        redirect(send)\n    elif request.vars.password:\n        if verify_password(request.vars.password):\n            session.authorized = True\n\n            if CHECK_VERSION:\n                session.check_version = True\n            else:\n                session.check_version = False\n\n            session.last_time = t0\n            if isinstance(send, list):  # ## why does this happen?\n                send = str(send[0])\n\n            redirect(send)\n        else:\n            response.flash = T(\'invalid password\')\n\n    return dict(send=send)\n\n\ndef check_version():\n    """ Checks if web2py is up to date """\n\n    session.forget()\n    session._unlock(response)\n\n    new_version, version_number = check_new_version(request.env.web2py_version,\n                                    WEB2PY_VERSION_URL)\n\n    if new_version == -1:\n        return A(T(\'Unable to check for upgrades\'), _href=WEB2PY_URL)\n    elif new_version != True:\n        return A(T(\'web2py is up to date\'), _href=WEB2PY_URL)\n    elif platform.system().lower() in (\'windows\',\'win32\',\'win64\') and os.path.exists("web2py.exe"):\n        return SPAN(\'You should upgrade to version %s\' % version_number)\n    else:\n        return sp_button(URL(\'upgrade_web2py\'), T(\'upgrade now\')) \\\n          + XML(\' <strong class="upgrade_version">%s</strong>\' % version_number)\n\n\ndef logout():\n    """ Logout handler """\n    session.authorized = None\n    if MULTI_USER_MODE:\n        redirect(URL(\'user/logout\'))\n    redirect(URL(\'index\'))\n\n\ndef change_password():\n\n    if session.pam_user:\n        session.flash = T(\'PAM authenticated user, cannot change password here\')\n        redirect(URL(\'site\'))\n    form=SQLFORM.factory(Field(\'current_admin_password\',\'password\'),\n                         Field(\'new_admin_password\',\'password\',requires=IS_STRONG()),\n                         Field(\'new_admin_password_again\',\'password\'))\n    if form.accepts(request.vars):\n        if not verify_password(request.vars.current_admin_password):\n            form.errors.current_admin_password = T(\'invalid password\')\n        elif form.vars.new_admin_password != form.vars.new_admin_password_again:\n            form.errors.new_admin_password_again = T(\'no match\')\n        else:\n            path = abspath(\'parameters_%s.py\' % request.env.server_port)\n            safe_write(path, \'password="%s"\' % CRYPT()(request.vars.new_admin_password)[0])\n            session.flash = T(\'password changed\')\n            redirect(URL(\'site\'))\n    return dict(form=form)\n\ndef site():\n    """ Site handler """\n\n    myversion = request.env.web2py_version\n\n    # Shortcut to make the elif statements more legible\n    file_or_appurl = \'file\' in request.vars or \'appurl\' in request.vars\n\n    if DEMO_MODE:\n        pass\n\n    elif request.vars.filename and not \'file\' in request.vars:\n        # create a new application\n        appname = cleanpath(request.vars.filename).replace(\'.\', \'_\')\n        if app_create(appname, request):\n            if MULTI_USER_MODE:\n                db.app.insert(name=appname,owner=auth.user.id)\n            session.flash = T(\'new application "%s" created\', appname)\n            redirect(URL(\'design\',args=appname))\n        else:\n            session.flash = \\\n                T(\'unable to create application "%s" (it may exist already)\', request.vars.filename)\n        redirect(URL(r=request))\n\n    elif file_or_appurl and not request.vars.filename:\n        # can\'t do anything without an app name\n        msg = \'you must specify a name for the uploaded application\'\n        response.flash = T(msg)\n\n    elif file_or_appurl and request.vars.filename:\n        # fetch an application via URL or file upload\n        f = None\n        if request.vars.appurl is not \'\':\n            try:\n                f = urllib.urlopen(request.vars.appurl)\n            except Exception, e:\n                session.flash = DIV(T(\'Unable to download app because:\'),PRE(str(e)))\n                redirect(URL(r=request))\n            fname = request.vars.appurl\n        elif request.vars.file is not \'\':\n            f = request.vars.file.file\n            fname = request.vars.file.filename\n\n        if f:\n            appname = cleanpath(request.vars.filename).replace(\'.\', \'_\')\n            installed = app_install(appname, f, request, fname,\n                                    overwrite=request.vars.overwrite_check)\n        if f and installed:\n            msg = \'application %(appname)s installed with md5sum: %(digest)s\'\n            session.flash = T(msg, dict(appname=appname,\n                                        digest=md5_hash(installed)))\n        elif f and request.vars.overwrite_check:\n            msg = \'unable to install application "%(appname)s"\'\n            session.flash = T(msg, dict(appname=request.vars.filename))\n\n        else:\n            msg = \'unable to install application "%(appname)s"\'\n            session.flash = T(msg, dict(appname=request.vars.filename))\n\n        redirect(URL(r=request))\n\n    regex = re.compile(\'^\\w+$\')\n\n    if is_manager():\n        apps = [f for f in os.listdir(apath(r=request)) if regex.match(f)]\n    else:\n        apps = [f.name for f in db(db.app.owner==auth.user_id).select()]\n\n    if FILTER_APPS:\n        apps = [f for f in apps if f in FILTER_APPS]\n\n    apps = sorted(apps,lambda a,b:cmp(a.upper(),b.upper()))\n\n    return dict(app=None, apps=apps, myversion=myversion)\n\n\ndef pack():\n    app = get_app()\n\n    if len(request.args) == 1:\n        fname = \'web2py.app.%s.w2p\' % app\n        filename = app_pack(app, request)\n    else:\n        fname = \'web2py.app.%s.compiled.w2p\' % app\n        filename = app_pack_compiled(app, request)\n\n    if filename:\n        response.headers[\'Content-Type\'] = \'application/w2p\'\n        disposition = \'attachment; filename=%s\' % fname\n        response.headers[\'Content-Disposition\'] = disposition\n        return safe_read(filename, \'rb\')\n    else:\n        session.flash = T(\'internal error\')\n        redirect(URL(\'site\'))\n\ndef pack_plugin():\n    app = get_app()\n    if len(request.args) == 2:\n        fname = \'web2py.plugin.%s.w2p\' % request.args[1]\n        filename = plugin_pack(app, request.args[1], request)\n    if filename:\n        response.headers[\'Content-Type\'] = \'application/w2p\'\n        disposition = \'attachment; filename=%s\' % fname\n        response.headers[\'Content-Disposition\'] = disposition\n        return safe_read(filename, \'rb\')\n    else:\n        session.flash = T(\'internal error\')\n        redirect(URL(\'plugin\',args=request.args))\n\ndef upgrade_web2py():\n    if \'upgrade\' in request.vars:\n        (success, error) = upgrade(request)\n        if success:\n            session.flash = T(\'web2py upgraded; please restart it\')\n        else:\n            session.flash = T(\'unable to upgrade because "%s"\', error)\n        redirect(URL(\'site\'))\n    elif \'noupgrade\' in request.vars:\n        redirect(URL(\'site\'))\n    return dict()\n\ndef uninstall():\n    app = get_app()\n    if \'delete\' in request.vars:\n        if MULTI_USER_MODE:\n            if is_manager() and db(db.app.name==app).delete():\n                pass\n            elif db(db.app.name==app)(db.app.owner==auth.user.id).delete():\n                pass\n            else:\n                session.flash = T(\'no permission to uninstall "%s"\', app)\n                redirect(URL(\'site\'))\n        if app_uninstall(app, request):            \n            session.flash = T(\'application "%s" uninstalled\', app)\n        else:\n            session.flash = T(\'unable to uninstall "%s"\', app)\n        redirect(URL(\'site\'))\n    elif \'nodelete\' in request.vars:\n        redirect(URL(\'site\'))\n    return dict(app=app)\n\n\ndef cleanup():\n    app = get_app()\n    clean = app_cleanup(app, request)\n    if not clean:\n        session.flash = T("some files could not be removed")\n    else:\n        session.flash = T(\'cache, errors and sessions cleaned\')\n\n    redirect(URL(\'site\'))\n\n\ndef compile_app():\n    app = get_app()\n    c = app_compile(app, request)\n    if not c:\n        session.flash = T(\'application compiled\')\n    else:\n        session.flash = DIV(T(\'Cannot compile: there are errors in your app:\'),\n                              CODE(c))\n    redirect(URL(\'site\'))\n\n\ndef remove_compiled_app():\n    """ Remove the compiled application """\n    app = get_app()\n    remove_compiled_application(apath(app, r=request))\n    session.flash = T(\'compiled application removed\')\n    redirect(URL(\'site\'))\n\ndef delete():\n    """ Object delete handler """\n    app = get_app()\n    filename = \'/\'.join(request.args)\n    sender = request.vars.sender\n\n    if isinstance(sender, list):  # ## fix a problem with Vista\n        sender = sender[0]\n\n    if \'nodelete\' in request.vars:\n        redirect(URL(sender))\n    elif \'delete\' in request.vars:\n        try:\n            os.unlink(apath(filename, r=request))\n            session.flash = T(\'file "%(filename)s" deleted\',\n                              dict(filename=filename))\n        except Exception:\n            session.flash = T(\'unable to delete file "%(filename)s"\',\n                              dict(filename=filename))\n        redirect(URL(sender))\n    return dict(filename=filename, sender=sender)\n\ndef peek():\n    """ Visualize object code """\n    app = get_app()\n    filename = \'/\'.join(request.args)\n    try:\n        data = safe_read(apath(filename, r=request)).replace(\'\\r\',\'\')\n    except IOError:\n        session.flash = T(\'file does not exist\')\n        redirect(URL(\'site\'))\n\n    extension = filename[filename.rfind(\'.\') + 1:].lower()\n\n    return dict(app=request.args[0],\n                filename=filename,\n                data=data,\n                extension=extension)\n\n\ndef test():\n    """ Execute controller tests """\n    app = get_app()\n    if len(request.args) > 1:\n        file = request.args[1]\n    else:\n        file = \'.*\\.py\'\n\n    controllers = listdir(apath(\'%s/controllers/\' % app, r=request), file + \'$\')\n\n    return dict(app=app, controllers=controllers)\n\ndef keepalive():\n    return \'\'\n\ndef search():\n    keywords=request.vars.keywords or \'\'\n    app = get_app()\n    def match(filename,keywords):\n        filename=os.path.join(apath(app, r=request),filename)\n        if keywords in read_file(filename,\'rb\'):\n            return True\n        return False\n    path = apath(request.args[0], r=request)\n    files1 = glob(os.path.join(path,\'*/*.py\'))\n    files2 = glob(os.path.join(path,\'*/*.html\'))\n    files3 = glob(os.path.join(path,\'*/*/*.html\'))\n    files=[x[len(path)+1:].replace(\'\\\\\',\'/\') for x in files1+files2+files3 if match(x,keywords)]\n    return response.json({\'files\':files})\n\ndef edit():\n    """ File edit handler """\n    # Load json only if it is ajax edited...\n    app = get_app()\n    filename = \'/\'.join(request.args)\n    # Try to discover the file type\n    if filename[-3:] == \'.py\':\n        filetype = \'python\'\n    elif filename[-5:] == \'.html\':\n        filetype = \'html\'\n    elif filename[-5:] == \'.load\':\n        filetype = \'html\'\n    elif filename[-4:] == \'.css\':\n        filetype = \'css\'\n    elif filename[-3:] == \'.js\':\n        filetype = \'js\'\n    else:\n        filetype = \'html\'\n\n    # ## check if file is not there\n\n    path = apath(filename, r=request)\n\n    if request.vars.revert and os.path.exists(path + \'.bak\'):\n        try:\n            data = safe_read(path + \'.bak\')\n            data1 = safe_read(path)\n        except IOError:\n            session.flash = T(\'Invalid action\')\n            if \'from_ajax\' in request.vars:\n                 return response.json({\'error\': str(T(\'Invalid action\'))})\n            else:\n                redirect(URL(\'site\'))\n\n        safe_write(path, data)\n        file_hash = md5_hash(data)\n        saved_on = time.ctime(os.stat(path)[stat.ST_MTIME])\n        safe_write(path + \'.bak\', data1)\n        response.flash = T(\'file "%s" of %s restored\', (filename, saved_on))\n    else:\n        try:\n            data = safe_read(path)\n        except IOError:\n            session.flash = T(\'Invalid action\')\n            if \'from_ajax\' in request.vars:\n                return response.json({\'error\': str(T(\'Invalid action\'))})\n            else:\n                redirect(URL(\'site\'))\n\n        file_hash = md5_hash(data)\n        saved_on = time.ctime(os.stat(path)[stat.ST_MTIME])\n\n        if request.vars.file_hash and request.vars.file_hash != file_hash:\n            session.flash = T(\'file changed on disk\')\n            data = request.vars.data.replace(\'\\r\\n\', \'\\n\').strip() + \'\\n\'\n            safe_write(path + \'.1\', data)\n            if \'from_ajax\' in request.vars:\n                return response.json({\'error\': str(T(\'file changed on disk\')),\n                                      \'redirect\': URL(\'resolve\',\n                                                      args=request.args)})\n            else:\n                redirect(URL(\'resolve\', args=request.args))\n        elif request.vars.data:\n            safe_write(path + \'.bak\', data)\n            data = request.vars.data.replace(\'\\r\\n\', \'\\n\').strip() + \'\\n\'\n            safe_write(path, data)\n            file_hash = md5_hash(data)\n            saved_on = time.ctime(os.stat(path)[stat.ST_MTIME])\n            response.flash = T(\'file saved on %s\', saved_on)\n\n    data_or_revert = (request.vars.data or request.vars.revert)\n\n    # Check compile errors\n    highlight = None\n    if filetype == \'python\' and request.vars.data:\n        import _ast\n        try:\n            code = request.vars.data.rstrip().replace(\'\\r\\n\',\'\\n\')+\'\\n\'\n            compile(code, path, "exec", _ast.PyCF_ONLY_AST)\n        except Exception, e:\n            start = sum([len(line)+1 for l, line\n                            in enumerate(request.vars.data.split("\\n"))\n                            if l < e.lineno-1])\n            if e.text and e.offset:\n                offset = e.offset - (len(e.text) - len(e.text.splitlines()[-1]))\n            else:\n                offset = 0\n            highlight = {\'start\': start, \'end\': start + offset + 1}\n            try:\n                ex_name = e.__class__.__name__\n            except:\n                ex_name = \'unknown exception!\'\n            response.flash = DIV(T(\'failed to compile file because:\'), BR(),\n                                 B(ex_name), T(\' at line %s\') % e.lineno,\n                                 offset and T(\' at char %s\') % offset or \'\',\n                                 PRE(str(e)))\n\n    if data_or_revert and request.args[1] == \'modules\':\n        # Lets try to reload the modules\n        try:\n            mopath = \'.\'.join(request.args[2:])[:-3]\n            exec \'import applications.%s.modules.%s\' % (request.args[0], mopath)\n            reload(sys.modules[\'applications.%s.modules.%s\'\n                    % (request.args[0], mopath)])\n        except Exception, e:\n            response.flash = DIV(T(\'failed to reload module because:\'),PRE(str(e)))\n\n    edit_controller = None\n    editviewlinks = None\n    view_link = None\n    if filetype == \'html\' and len(request.args) >= 3:\n        cfilename = os.path.join(request.args[0], \'controllers\',\n                                 request.args[2] + \'.py\')\n        if os.path.exists(apath(cfilename, r=request)):\n            edit_controller = URL(\'edit\', args=[cfilename])\n            view = request.args[3].replace(\'.html\',\'\')\n            view_link = URL(request.args[0],request.args[2],view)\n    elif filetype == \'python\' and request.args[1] == \'controllers\':\n        ## it\'s a controller file.\n        ## Create links to all of the associated view files.\n        app = get_app()\n        viewname = os.path.splitext(request.args[2])[0]\n        viewpath = os.path.join(app,\'views\',viewname)\n        aviewpath = apath(viewpath, r=request)\n        viewlist = []\n        if os.path.exists(aviewpath):\n            if os.path.isdir(aviewpath):\n                viewlist = glob(os.path.join(aviewpath,\'*.html\'))\n        elif os.path.exists(aviewpath+\'.html\'):\n            viewlist.append(aviewpath+\'.html\')\n        if len(viewlist):\n            editviewlinks = []\n            for v in viewlist:\n                vf = os.path.split(v)[-1]\n                vargs = "/".join([viewpath.replace(os.sep,"/"),vf])\n                editviewlinks.append(A(T(vf.split(".")[0]),\\\n                    _href=URL(\'edit\',args=[vargs])))\n\n    if len(request.args) > 2 and request.args[1] == \'controllers\':\n        controller = (request.args[2])[:-3]\n        functions = regex_expose.findall(data)\n    else:\n        (controller, functions) = (None, None)\n\n    if \'from_ajax\' in request.vars:\n        return response.json({\'file_hash\': file_hash, \'saved_on\': saved_on, \'functions\':functions, \'controller\': controller, \'application\': request.args[0], \'highlight\': highlight })\n    else:\n\n        editarea_preferences = {}\n        editarea_preferences[\'FONT_SIZE\'] = \'10\'\n        editarea_preferences[\'FULL_SCREEN\'] = \'false\'\n        editarea_preferences[\'ALLOW_TOGGLE\'] = \'true\'\n        editarea_preferences[\'REPLACE_TAB_BY_SPACES\'] = \'4\'\n        editarea_preferences[\'DISPLAY\'] = \'onload\'\n        for key in editarea_preferences:\n            if globals().has_key(key):\n                editarea_preferences[key]=globals()[key]\n        return dict(app=request.args[0],\n                    filename=filename,\n                    filetype=filetype,\n                    data=data,\n                    edit_controller=edit_controller,\n                    file_hash=file_hash,\n                    saved_on=saved_on,\n                    controller=controller,\n                    functions=functions,\n                    view_link=view_link,\n                    editarea_preferences=editarea_preferences,\n                    editviewlinks=editviewlinks)\n\ndef resolve():\n    """\n    """\n\n    filename = \'/\'.join(request.args)\n    # ## check if file is not there\n    path = apath(filename, r=request)\n    a = safe_read(path).split(\'\\n\')\n    try:\n        b = safe_read(path + \'.1\').split(\'\\n\')\n    except IOError:\n        session.flash = \'Other file, no longer there\'\n        redirect(URL(\'edit\', args=request.args))\n\n    d = difflib.ndiff(a, b)\n\n    def leading(line):\n        """  """\n\n        # TODO: we really need to comment this\n        z = \'\'\n        for (k, c) in enumerate(line):\n            if c == \' \':\n                z += \'&nbsp;\'\n            elif c == \' \\t\':\n                z += \'&nbsp;\'\n            elif k == 0 and c == \'?\':\n                pass\n            else:\n                break\n\n        return XML(z)\n\n    def getclass(item):\n        """ Determine item class """\n\n        if item[0] == \' \':\n            return \'normal\'\n        if item[0] == \'+\':\n            return \'plus\'\n        if item[0] == \'-\':\n            return \'minus\'\n\n    if request.vars:\n        c = \'\'.join([item[2:] for (i, item) in enumerate(d) if item[0] \\\n                     == \' \' or \'line%i\' % i in request.vars])\n        safe_write(path, c)\n        session.flash = \'files merged\'\n        redirect(URL(\'edit\', args=request.args))\n    else:\n        # Making the short circuit compatible with <= python2.4\n        gen_data = lambda index,item: not item[:1] in [\'+\',\'-\'] and "" \\\n                   or INPUT(_type=\'checkbox\',\n                            _name=\'line%i\' % index,\n                            value=item[0] == \'+\')\n\n        diff = TABLE(*[TR(TD(gen_data(i,item)),\n                          TD(item[0]),\n                          TD(leading(item[2:]),\n                          TT(item[2:].rstrip())), _class=getclass(item))\n                       for (i, item) in enumerate(d) if item[0] != \'?\'])\n\n    return dict(diff=diff, filename=filename)\n\n\ndef edit_language():\n    """ Edit language file """\n    app = get_app()\n    filename = \'/\'.join(request.args)\n    from gluon.languages import read_dict, write_dict\n    strings = read_dict(apath(filename, r=request))\n    keys = sorted(strings.keys(),lambda x,y: cmp(x.lower(), y.lower()))\n    rows = []\n    rows.append(H2(T(\'Original/Translation\')))\n\n    for key in keys:\n        name = md5_hash(key)\n        if key==strings[key]:\n            _class=\'untranslated\'\n        else:\n            _class=\'translated\'\n        if len(key) <= 40:\n            elem = INPUT(_type=\'text\', _name=name,value=strings[key],\n                         _size=70,_class=_class)\n        else:\n            elem = TEXTAREA(_name=name, value=strings[key], _cols=70,\n                            _rows=5, _class=_class)\n\n        # Making the short circuit compatible with <= python2.4\n        k = (strings[key] != key) and key or B(key)\n\n        rows.append(P(k, BR(), elem, TAG.BUTTON(T(\'delete\'),\n                            _onclick=\'return delkey("%s")\' % name), _id=name))\n\n    rows.append(INPUT(_type=\'submit\', _value=T(\'update\')))\n    form = FORM(*rows)\n    if form.accepts(request.vars, keepvalues=True):\n        strs = dict()\n        for key in keys:\n            name = md5_hash(key)\n            if form.vars[name]==chr(127): continue\n            strs[key] = form.vars[name]\n        write_dict(apath(filename, r=request), strs)\n        session.flash = T(\'file saved on %(time)s\', dict(time=time.ctime()))\n        redirect(URL(r=request,args=request.args))\n    return dict(app=request.args[0], filename=filename, form=form)\n\n\ndef about():\n    """ Read about info """\n    app = get_app()\n    # ## check if file is not there\n    about = safe_read(apath(\'%s/ABOUT\' % app, r=request))\n    license = safe_read(apath(\'%s/LICENSE\' % app, r=request))\n    return dict(app=app, about=MARKMIN(about), license=MARKMIN(license))\n\n\ndef design():\n    """ Application design handler """\n    app = get_app()\n    if not response.flash and app == request.application:\n        msg = T(\'ATTENTION: you cannot edit the running application!\')\n        response.flash = msg\n\n    if request.vars.pluginfile!=None:\n        filename=os.path.basename(request.vars.pluginfile.filename)\n        if plugin_install(app, request.vars.pluginfile.file,\n                          request, filename):\n            session.flash = T(\'new plugin installed\')\n            redirect(URL(\'design\',args=app))\n        else:\n            session.flash = \\\n                T(\'unable to create application "%s"\', request.vars.filename)\n        redirect(URL(r=request))\n\n\n    # If we have only pyc files it means that\n    # we cannot design\n    if os.path.exists(apath(\'%s/compiled\' % app, r=request)):\n        session.flash = \\\n            T(\'application is compiled and cannot be designed\')\n        redirect(URL(\'site\'))\n\n    # Get all models\n    models = listdir(apath(\'%s/models/\' % app, r=request), \'.*\\.py$\')\n    models=[x.replace(\'\\\\\',\'/\') for x in models]\n    defines = {}\n    for m in models:\n        data = safe_read(apath(\'%s/models/%s\' % (app, m), r=request))\n        defines[m] = regex_tables.findall(data)\n        defines[m].sort()\n\n    # Get all controllers\n    controllers = sorted(listdir(apath(\'%s/controllers/\' % app, r=request), \'.*\\.py$\'))\n    controllers = [x.replace(\'\\\\\',\'/\') for x in controllers]\n    functions = {}\n    for c in controllers:\n        data = safe_read(apath(\'%s/controllers/%s\' % (app, c), r=request))\n        items = regex_expose.findall(data)\n        functions[c] = items\n\n    # Get all views\n    views = sorted(listdir(apath(\'%s/views/\' % app, r=request), \'[\\w/\\-]+\\.\\w+$\'))\n    views = [x.replace(\'\\\\\',\'/\') for x in views]\n    extend = {}\n    include = {}\n    for c in views:\n        data = safe_read(apath(\'%s/views/%s\' % (app, c), r=request))\n        items = regex_extend.findall(data)\n\n        if items:\n            extend[c] = items[0][1]\n\n        items = regex_include.findall(data)\n        include[c] = [i[1] for i in items]\n\n    # Get all modules\n    modules = listdir(apath(\'%s/modules/\' % app, r=request), \'.*\\.py$\')\n    modules = modules=[x.replace(\'\\\\\',\'/\') for x in modules]\n    modules.sort()\n\n    # Get all static files\n    statics = listdir(apath(\'%s/static/\' % app, r=request), \'[^\\.#].*\')\n    statics = [x.replace(\'\\\\\',\'/\') for x in statics]\n    statics.sort()\n\n    # Get all languages\n    languages = listdir(apath(\'%s/languages/\' % app, r=request), \'[\\w-]*\\.py\')\n\n    #Get crontab\n    cronfolder = apath(\'%s/cron\' % app, r=request)\n    if not os.path.exists(cronfolder): os.mkdir(cronfolder)\n    crontab = apath(\'%s/cron/crontab\' % app, r=request)\n    if not os.path.exists(crontab):\n        safe_write(crontab, \'#crontab\')\n\n    plugins=[]\n    def filter_plugins(items,plugins):\n        plugins+=[item[7:].split(\'/\')[0].split(\'.\')[0] for item in items if item.startswith(\'plugin_\')]\n        plugins[:]=list(set(plugins))\n        plugins.sort()\n        return [item for item in items if not item.startswith(\'plugin_\')]\n\n    return dict(app=app,\n                models=filter_plugins(models,plugins),\n                defines=defines,\n                controllers=filter_plugins(controllers,plugins),\n                functions=functions,\n                views=filter_plugins(views,plugins),\n                modules=filter_plugins(modules,plugins),\n                extend=extend,\n                include=include,\n                statics=filter_plugins(statics,plugins),\n                languages=languages,\n                crontab=crontab,\n                plugins=plugins)\n\ndef delete_plugin():\n    """ Object delete handler """\n    app=request.args(0)\n    plugin = request.args(1)\n    plugin_name=\'plugin_\'+plugin\n    if \'nodelete\' in request.vars:\n        redirect(URL(\'design\',args=app))\n    elif \'delete\' in request.vars:\n        try:\n            for folder in [\'models\',\'views\',\'controllers\',\'static\',\'modules\']:\n                path=os.path.join(apath(app,r=request),folder)\n                for item in os.listdir(path):\n                    if item.startswith(plugin_name):\n                        filename=os.path.join(path,item)\n                        if os.path.isdir(filename):\n                            shutil.rmtree(filename)\n                        else:\n                            os.unlink(filename)\n            session.flash = T(\'plugin "%(plugin)s" deleted\',\n                              dict(plugin=plugin))\n        except Exception:\n            session.flash = T(\'unable to delete file plugin "%(plugin)s"\',\n                              dict(plugin=plugin))\n        redirect(URL(\'design\',args=request.args(0)))\n    return dict(plugin=plugin)\n\ndef plugin():\n    """ Application design handler """\n    app = get_app()\n    plugin = request.args(1)\n\n    if not response.flash and app == request.application:\n        msg = T(\'ATTENTION: you cannot edit the running application!\')\n        response.flash = msg\n\n    # If we have only pyc files it means that\n    # we cannot design\n    if os.path.exists(apath(\'%s/compiled\' % app, r=request)):\n        session.flash = \\\n            T(\'application is compiled and cannot be designed\')\n        redirect(URL(\'site\'))\n\n    # Get all models\n    models = listdir(apath(\'%s/models/\' % app, r=request), \'.*\\.py$\')\n    models=[x.replace(\'\\\\\',\'/\') for x in models]\n    defines = {}\n    for m in models:\n        data = safe_read(apath(\'%s/models/%s\' % (app, m), r=request))\n        defines[m] = regex_tables.findall(data)\n        defines[m].sort()\n\n    # Get all controllers\n    controllers = sorted(listdir(apath(\'%s/controllers/\' % app, r=request), \'.*\\.py$\'))\n    controllers = [x.replace(\'\\\\\',\'/\') for x in controllers]\n    functions = {}\n    for c in controllers:\n        data = safe_read(apath(\'%s/controllers/%s\' % (app, c), r=request))\n        items = regex_expose.findall(data)\n        functions[c] = items\n\n    # Get all views\n    views = sorted(listdir(apath(\'%s/views/\' % app, r=request), \'[\\w/\\-]+\\.\\w+$\'))\n    views = [x.replace(\'\\\\\',\'/\') for x in views]\n    extend = {}\n    include = {}\n    for c in views:\n        data = safe_read(apath(\'%s/views/%s\' % (app, c), r=request))\n        items = regex_extend.findall(data)\n        if items:\n            extend[c] = items[0][1]\n\n        items = regex_include.findall(data)\n        include[c] = [i[1] for i in items]\n\n    # Get all modules\n    modules = listdir(apath(\'%s/modules/\' % app, r=request), \'.*\\.py$\')\n    modules = modules=[x.replace(\'\\\\\',\'/\') for x in modules]\n    modules.sort()\n\n    # Get all static files\n    statics = listdir(apath(\'%s/static/\' % app, r=request), \'[^\\.#].*\')\n    statics = [x.replace(\'\\\\\',\'/\') for x in statics]\n    statics.sort()\n\n    # Get all languages\n    languages = listdir(apath(\'%s/languages/\' % app, r=request), \'[\\w-]*\\.py\')\n\n    #Get crontab\n    crontab = apath(\'%s/cron/crontab\' % app, r=request)\n    if not os.path.exists(crontab):\n        safe_write(crontab, \'#crontab\')\n\n    def filter_plugins(items):\n        regex=re.compile(\'^plugin_\'+plugin+\'(/.*|\\..*)?$\')\n        return [item for item in items if regex.match(item)]\n\n    return dict(app=app,\n                models=filter_plugins(models),\n                defines=defines,\n                controllers=filter_plugins(controllers),\n                functions=functions,\n                views=filter_plugins(views),\n                modules=filter_plugins(modules),\n                extend=extend,\n                include=include,\n                statics=filter_plugins(statics),\n                languages=languages,\n                crontab=crontab)\n\n\ndef create_file():\n    """ Create files handler """\n    try:\n        app = get_app(name=request.vars.location.split(\'/\')[0])\n        path = apath(request.vars.location, r=request)\n        filename = re.sub(\'[^\\w./-]+\', \'_\', request.vars.filename)\n\n        if path[-11:] == \'/languages/\':\n            # Handle language files\n            if len(filename) == 0:\n                raise SyntaxError\n            if not filename[-3:] == \'.py\':\n                filename += \'.py\'\n            app = path.split(\'/\')[-3]\n            path=os.path.join(apath(app, r=request),\'languages\',filename)\n            if not os.path.exists(path):\n                safe_write(path, \'\')\n            findT(apath(app, r=request), filename[:-3])\n            session.flash = T(\'language file "%(filename)s" created/updated\',\n                              dict(filename=filename))\n            redirect(request.vars.sender)\n\n        elif path[-8:] == \'/models/\':\n            # Handle python models\n            if not filename[-3:] == \'.py\':\n                filename += \'.py\'\n\n            if len(filename) == 3:\n                raise SyntaxError\n\n            text = \'# coding: utf8\\n\'\n\n        elif path[-13:] == \'/controllers/\':\n            # Handle python controllers\n            if not filename[-3:] == \'.py\':\n                filename += \'.py\'\n\n            if len(filename) == 3:\n                raise SyntaxError\n\n            text = \'# coding: utf8\\n# %s\\ndef index(): return dict(message="hello from %s")\'\n            text = text % (T(\'try something like\'), filename)\n\n        elif path[-7:] == \'/views/\':\n            if request.vars.plugin and not filename.startswith(\'plugin_%s/\' % request.vars.plugin):\n                filename = \'plugin_%s/%s\' % (request.vars.plugin, filename)\n            # Handle template (html) views\n            if filename.find(\'.\')<0:\n                filename += \'.html\'\n            extension = filename.split(\'.\')[-1].lower()\n\n            if len(filename) == 5:\n                raise SyntaxError\n\n            msg = T(\'This is the %(filename)s template\',\n                    dict(filename=filename))            \n            if extension == \'html\':\n                text = dedent("""\n                   {{extend \'layout.html\'}}\n                   <h1>%s</h1>\n                   {{=BEAUTIFY(response._vars)}}""" % msg)\n            else:\n                generic = os.path.join(path,\'generic.\'+extension)\n                if os.path.exists(generic):\n                    text = read_file(generic)\n                else:\n                    text = \'\'\n                \n        elif path[-9:] == \'/modules/\':\n            if request.vars.plugin and not filename.startswith(\'plugin_%s/\' % request.vars.plugin):\n                filename = \'plugin_%s/%s\' % (request.vars.plugin, filename)\n            # Handle python module files\n            if not filename[-3:] == \'.py\':\n                filename += \'.py\'\n\n            if len(filename) == 3:\n                raise SyntaxError\n\n            text = dedent("""\n                   #!/usr/bin/env python\n                   # coding: utf8\n                   from gluon.html import *\n                   from gluon.http import *\n                   from gluon.validators import *\n                   from gluon.sqlhtml import *\n                   # request, response, session, cache, T, db(s)\n                   # must be passed and cannot be imported!""")\n\n        elif path[-8:] == \'/static/\':\n            if request.vars.plugin and not filename.startswith(\'plugin_%s/\' % request.vars.plugin):\n                filename = \'plugin_%s/%s\' % (request.vars.plugin, filename)\n            text = \'\'\n        else:\n            redirect(request.vars.sender)\n\n        full_filename = os.path.join(path, filename)\n        dirpath = os.path.dirname(full_filename)\n\n        if not os.path.exists(dirpath):\n            os.makedirs(dirpath)\n\n        if os.path.exists(full_filename):\n            raise SyntaxError\n\n        safe_write(full_filename, text)\n        session.flash = T(\'file "%(filename)s" created\',\n                          dict(filename=full_filename[len(path):]))\n        redirect(URL(\'edit\',\n                 args=[os.path.join(request.vars.location, filename)]))\n    except Exception, e:\n        if not isinstance(e,HTTP):\n            session.flash = T(\'cannot create file\')\n\n    redirect(request.vars.sender)\n\n\ndef upload_file():\n    """ File uploading handler """\n\n    try:\n        app = get_app(name=request.vars.location.split(\'/\')[0])\n        path = apath(request.vars.location, r=request)\n\n        if request.vars.filename:\n            filename = re.sub(\'[^\\w\\./]+\', \'_\', request.vars.filename)\n        else:\n            filename = os.path.split(request.vars.file.filename)[-1]\n\n        if path[-8:] == \'/models/\' and not filename[-3:] == \'.py\':\n            filename += \'.py\'\n\n        if path[-9:] == \'/modules/\' and not filename[-3:] == \'.py\':\n            filename += \'.py\'\n\n        if path[-13:] == \'/controllers/\' and not filename[-3:] == \'.py\':\n            filename += \'.py\'\n\n        if path[-7:] == \'/views/\' and not filename[-5:] == \'.html\':\n            filename += \'.html\'\n\n        if path[-11:] == \'/languages/\' and not filename[-3:] == \'.py\':\n            filename += \'.py\'\n\n        filename = os.path.join(path, filename)\n        dirpath = os.path.dirname(filename)\n\n        if not os.path.exists(dirpath):\n            os.makedirs(dirpath)\n\n        safe_write(filename, request.vars.file.file.read(), \'wb\')\n        session.flash = T(\'file "%(filename)s" uploaded\',\n                          dict(filename=filename[len(path):]))\n    except Exception:\n        session.flash = T(\'cannot upload file "%(filename)s"\',\n                          dict(filename[len(path):]))\n\n    redirect(request.vars.sender)\n\n\ndef errors():\n    """ Error handler """\n    import operator\n    import os\n    import pickle\n    import hashlib\n\n    app = get_app()\n\n    method = request.args(1) or \'new\'\n\n\n    if method == \'new\':\n        errors_path = apath(\'%s/errors\' % app, r=request)\n\n        delete_hashes = []\n        for item in request.vars:\n            if item[:7] == \'delete_\':\n                delete_hashes.append(item[7:])\n\n        hash2error = dict()\n\n        for fn in listdir(errors_path, \'^\\w.*\'):\n            fullpath = os.path.join(errors_path, fn)\n            if not os.path.isfile(fullpath): continue\n            try:\n                fullpath_file = open(fullpath, \'r\')\n                try:\n                    error = pickle.load(fullpath_file)\n                finally:\n                    fullpath_file.close()\n            except IOError:\n                continue\n\n            hash = hashlib.md5(error[\'traceback\']).hexdigest()\n\n            if hash in delete_hashes:\n                os.unlink(fullpath)\n            else:\n                try:\n                    hash2error[hash][\'count\'] += 1\n                except KeyError:\n                    error_lines = error[\'traceback\'].split("\\n")\n                    last_line = error_lines[-2]\n                    error_causer = os.path.split(error[\'layer\'])[1]\n                    hash2error[hash] = dict(count=1, pickel=error,\n                                            causer=error_causer,\n                                            last_line=last_line,\n                                            hash=hash,ticket=fn)\n\n        decorated = [(x[\'count\'], x) for x in hash2error.values()]\n        decorated.sort(key=operator.itemgetter(0), reverse=True)\n\n        return dict(errors = [x[1] for x in decorated], app=app, method=method)\n    else:\n        for item in request.vars:\n            if item[:7] == \'delete_\':\n                os.unlink(apath(\'%s/errors/%s\' % (app, item[7:]), r=request))\n        func = lambda p: os.stat(apath(\'%s/errors/%s\' % \\\n                                           (app, p), r=request)).st_mtime\n        tickets = sorted(listdir(apath(\'%s/errors/\' % app, r=request), \'^\\w.*\'),\n                         key=func,\n                         reverse=True)\n\n        return dict(app=app, tickets=tickets, method=method)\n\n\ndef make_link(path):\n    """ Create a link from a path """\n    tryFile = path.replace(\'\\\\\', \'/\')\n\n    if os.path.isabs(tryFile) and os.path.isfile(tryFile):\n        (folder, filename) = os.path.split(tryFile)\n        (base, ext) = os.path.splitext(filename)\n        app = get_app()\n\n        editable = {\'controllers\': \'.py\', \'models\': \'.py\', \'views\': \'.html\'}\n        for key in editable.keys():\n            check_extension = folder.endswith("%s/%s" % (app,key))\n            if ext.lower() == editable[key] and check_extension:\n                return A(\'"\' + tryFile + \'"\',\n                         _href=URL(r=request,\n                         f=\'edit/%s/%s/%s\' % (app, key, filename))).xml()\n    return \'\'\n\n\ndef make_links(traceback):\n    """ Make links using the given traceback """\n\n    lwords = traceback.split(\'"\')\n\n    # Making the short circuit compatible with <= python2.4\n    result = (len(lwords) != 0) and lwords[0] or \'\'\n\n    i = 1\n\n    while i < len(lwords):\n        link = make_link(lwords[i])\n\n        if link == \'\':\n            result += \'"\' + lwords[i]\n        else:\n            result += link\n\n            if i + 1 < len(lwords):\n                result += lwords[i + 1]\n                i = i + 1\n\n        i = i + 1\n\n    return result\n\n\nclass TRACEBACK(object):\n    """ Generate the traceback """\n\n    def __init__(self, text):\n        """ TRACEBACK constructor """\n\n        self.s = make_links(CODE(text).xml())\n\n    def xml(self):\n        """ Returns the xml """\n\n        return self.s\n\n\ndef ticket():\n    """ Ticket handler """\n\n    if len(request.args) != 2:\n        session.flash = T(\'invalid ticket\')\n        redirect(URL(\'site\'))\n\n    app = get_app()\n    myversion = request.env.web2py_version\n    ticket = request.args[1]\n    e = RestrictedError()\n    e.load(request, app, ticket)\n\n    return dict(app=app,\n                ticket=ticket,\n                output=e.output,\n                traceback=(e.traceback and TRACEBACK(e.traceback)),\n                snapshot=e.snapshot,\n                code=e.code,\n                layer=e.layer,\n                myversion=myversion)\n\ndef error():\n    """ Generate a ticket (for testing) """\n    raise RuntimeError(\'admin ticket generator at your service\')\n\ndef update_languages():\n    """ Update available languages """\n\n    app = get_app()\n    update_all_languages(apath(app, r=request))\n    session.flash = T(\'Language files (static strings) updated\')\n    redirect(URL(\'design\',args=app))\n\ndef twitter():\n    session.forget()\n    session._unlock(response)\n    import gluon.tools\n    import gluon.contrib.simplejson as sj\n    try:\n        page = gluon.tools.fetch(\'http://twitter.com/web2py?format=json\')\n        return sj.loads(page)[\'#timeline\']\n    except Exception, e:\n        return DIV(T(\'Unable to download because:\'),BR(),str(e))\n\ndef user():\n    if MULTI_USER_MODE:\n        if not db(db.auth_user).count():\n            auth.settings.registration_requires_approval = False            \n        return dict(form=auth())\n    else:\n        return dict(form=T("Disabled"))\n\ndef reload_routes():\n   """ Reload routes.py """\n   gluon.rewrite.load()\n   redirect(URL(\'site\'))\n\nresponse._vars=response._caller(design)\n'
p6
sS'snapshot'
p7
(dp8
S'exception'
p9
(dp10
S'__getslice__'
p11
S"<method-wrapper '__getslice__' of exceptions.OSError object>"
p12
sS'__str__'
p13
S"<method-wrapper '__str__' of exceptions.OSError object>"
p14
sS'__reduce__'
p15
S'<built-in method __reduce__ of exceptions.OSError object>'
p16
sS'__dict__'
p17
S'{}'
p18
sS'__sizeof__'
p19
S'<built-in method __sizeof__ of exceptions.OSError object>'
p20
sS'__init__'
p21
S"<method-wrapper '__init__' of exceptions.OSError object>"
p22
sS'__setattr__'
p23
S"<method-wrapper '__setattr__' of exceptions.OSError object>"
p24
sS'__reduce_ex__'
p25
S'<built-in method __reduce_ex__ of exceptions.OSError object>'
p26
sS'__new__'
p27
S'<built-in method __new__ of type object>'
p28
sS'errno'
p29
S'2'
sS'__format__'
p30
S'<built-in method __format__ of exceptions.OSError object>'
p31
sS'__class__'
p32
S"<type 'exceptions.OSError'>"
p33
sS'filename'
p34
S"'/home/henry/Workspace/invent/final/web2py/applications/None/cron'"
p35
sS'__doc__'
p36
S"'OS system call failed.'"
p37
sS'__getitem__'
p38
S"<method-wrapper '__getitem__' of exceptions.OSError object>"
p39
sS'__setstate__'
p40
S'<built-in method __setstate__ of exceptions.OSError object>'
p41
sS'__getattribute__'
p42
S"<method-wrapper '__getattribute__' of exceptions.OSError object>"
p43
sS'args'
p44
S"(2, 'No such file or directory')"
p45
sS'__subclasshook__'
p46
S'<built-in method __subclasshook__ of type object>'
p47
sS'__unicode__'
p48
S'<built-in method __unicode__ of exceptions.OSError object>'
p49
sS'strerror'
p50
S"'No such file or directory'"
p51
sS'__delattr__'
p52
S"<method-wrapper '__delattr__' of exceptions.OSError object>"
p53
sS'__repr__'
p54
S"<method-wrapper '__repr__' of exceptions.OSError object>"
p55
sS'__hash__'
p56
S"<method-wrapper '__hash__' of exceptions.OSError object>"
p57
ssS'evalue'
p58
S"[Errno 2] No such file or directory: '/home/henry/Workspace/invent/final/web2py/applications/None/cron'"
p59
sS'request'
p60
ccopy_reg
_reconstructor
p61
(cgluon.html
BEAUTIFY
p62
c__builtin__
object
p63
NtRp64
(dp65
S'attributes'
p66
(dp67
sS'components'
p68
(lp69
g61
(cgluon.html
TABLE
p70
g63
NtRp71
(dp72
g66
(dp73
S'level'
p74
I5
ssS'parent'
p75
Nsg68
(lp76
g61
(cgluon.html
TR
p77
g63
NtRp78
(dp79
g66
(dp80
sg75
g71
sg68
(lp81
g61
(cgluon.html
TD
p82
g63
NtRp83
(dp84
g66
(dp85
S'_style'
p86
S'font-weight:bold;'
p87
ssg75
g78
sg68
(lp88
S'ajax'
p89
asbag61
(g82
g63
NtRp90
(dp91
g66
(dp92
S'_valign'
p93
S'top'
p94
ssg75
g78
sg68
(lp95
S':'
asbag61
(g82
g63
NtRp96
(dp97
g66
(dp98
sg75
g78
sg68
(lp99
g61
(g62
g63
NtRp100
(dp101
g66
(dp102
g74
I5
ssg75
g96
sg68
(lp103
S'False'
p104
asbasbasbag61
(g77
g63
NtRp105
(dp106
g66
(dp107
sg75
g71
sg68
(lp108
g61
(g82
g63
NtRp109
(dp110
g66
(dp111
g86
g87
ssg75
g105
sg68
(lp112
S'application'
p113
asbag61
(g82
g63
NtRp114
(dp115
g66
(dp116
g93
g94
ssg75
g105
sg68
(lp117
S':'
asbag61
(g82
g63
NtRp118
(dp119
g66
(dp120
sg75
g105
sg68
(lp121
g61
(g62
g63
NtRp122
(dp123
g66
(dp124
g74
I5
ssg75
g118
sg68
(lp125
S'admin'
p126
asbasbasbag61
(g77
g63
NtRp127
(dp128
g66
(dp129
sg75
g71
sg68
(lp130
g61
(g82
g63
NtRp131
(dp132
g66
(dp133
g86
g87
ssg75
g127
sg68
(lp134
g44
asbag61
(g82
g63
NtRp135
(dp136
g66
(dp137
g93
g94
ssg75
g127
sg68
(lp138
S':'
asbag61
(g82
g63
NtRp139
(dp140
g66
(dp141
sg75
g127
sg68
(lp142
g61
(g62
g63
NtRp143
(dp144
g66
(dp145
g74
I5
ssg75
g139
sg68
(lp146
g61
(g70
g63
NtRp147
(dp148
g66
(dp149
g74
I4
ssg75
Nsg68
(lp150
sbasbasbasbag61
(g77
g63
NtRp151
(dp152
g66
(dp153
sg75
g71
sg68
(lp154
g61
(g82
g63
NtRp155
(dp156
g66
(dp157
g86
g87
ssg75
g151
sg68
(lp158
S'body'
p159
asbag61
(g82
g63
NtRp160
(dp161
g66
(dp162
g93
g94
ssg75
g151
sg68
(lp163
S':'
asbag61
(g82
g63
NtRp164
(dp165
g66
(dp166
sg75
g151
sg68
(lp167
g61
(g62
g63
NtRp168
(dp169
g66
(dp170
g74
I5
ssg75
g164
sg68
(lp171
S'<cStringIO.StringO object at 0xb058ab60>'
p172
asbasbasbag61
(g77
g63
NtRp173
(dp174
g66
(dp175
sg75
g71
sg68
(lp176
g61
(g82
g63
NtRp177
(dp178
g66
(dp179
g86
g87
ssg75
g173
sg68
(lp180
S'client'
p181
asbag61
(g82
g63
NtRp182
(dp183
g66
(dp184
g93
g94
ssg75
g173
sg68
(lp185
S':'
asbag61
(g82
g63
NtRp186
(dp187
g66
(dp188
sg75
g173
sg68
(lp189
g61
(g62
g63
NtRp190
(dp191
g66
(dp192
g74
I5
ssg75
g186
sg68
(lp193
S'127.0.0.1'
p194
asbasbasbag61
(g77
g63
NtRp195
(dp196
g66
(dp197
sg75
g71
sg68
(lp198
g61
(g82
g63
NtRp199
(dp200
g66
(dp201
g86
g87
ssg75
g195
sg68
(lp202
S'controller'
p203
asbag61
(g82
g63
NtRp204
(dp205
g66
(dp206
g93
g94
ssg75
g195
sg68
(lp207
S':'
asbag61
(g82
g63
NtRp208
(dp209
g66
(dp210
sg75
g195
sg68
(lp211
g61
(g62
g63
NtRp212
(dp213
g66
(dp214
g74
I5
ssg75
g208
sg68
(lp215
S'default'
p216
asbasbasbag61
(g77
g63
NtRp217
(dp218
g66
(dp219
sg75
g71
sg68
(lp220
g61
(g82
g63
NtRp221
(dp222
g66
(dp223
g86
g87
ssg75
g217
sg68
(lp224
S'cookies'
p225
asbag61
(g82
g63
NtRp226
(dp227
g66
(dp228
g93
g94
ssg75
g217
sg68
(lp229
S':'
asbag61
(g82
g63
NtRp230
(dp231
g66
(dp232
sg75
g217
sg68
(lp233
g61
(g62
g63
NtRp234
(dp235
g66
(dp236
g74
I5
ssg75
g230
sg68
(lp237
g61
(g70
g63
NtRp238
(dp239
g66
(dp240
g74
I4
ssg75
Nsg68
(lp241
g61
(g77
g63
NtRp242
(dp243
g66
(dp244
sg75
g238
sg68
(lp245
g61
(g82
g63
NtRp246
(dp247
g66
(dp248
g86
g87
ssg75
g242
sg68
(lp249
S'session_id_admin'
p250
asbag61
(g82
g63
NtRp251
(dp252
g66
(dp253
g93
g94
ssg75
g242
sg68
(lp254
S':'
asbag61
(g82
g63
NtRp255
(dp256
g66
(dp257
sg75
g242
sg68
(lp258
g61
(g62
g63
NtRp259
(dp260
g66
(dp261
g74
I4
ssg75
g255
sg68
(lp262
g61
(g70
g63
NtRp263
(dp264
g66
(dp265
g74
I3
ssg75
Nsg68
(lp266
g61
(g77
g63
NtRp267
(dp268
g66
(dp269
sg75
g263
sg68
(lp270
g61
(g82
g63
NtRp271
(dp272
g66
(dp273
g86
g87
ssg75
g267
sg68
(lp274
S'comment'
p275
asbag61
(g82
g63
NtRp276
(dp277
g66
(dp278
g93
g94
ssg75
g267
sg68
(lp279
S':'
asbag61
(g82
g63
NtRp280
(dp281
g66
(dp282
sg75
g267
sg68
(lp283
g61
(g62
g63
NtRp284
(dp285
g66
(dp286
g74
I3
ssg75
g280
sg68
(lp287
S''
asbasbasbag61
(g77
g63
NtRp288
(dp289
g66
(dp290
sg75
g263
sg68
(lp291
g61
(g82
g63
NtRp292
(dp293
g66
(dp294
g86
g87
ssg75
g288
sg68
(lp295
S'domain'
p296
asbag61
(g82
g63
NtRp297
(dp298
g66
(dp299
g93
g94
ssg75
g288
sg68
(lp300
S':'
asbag61
(g82
g63
NtRp301
(dp302
g66
(dp303
sg75
g288
sg68
(lp304
g61
(g62
g63
NtRp305
(dp306
g66
(dp307
g74
I3
ssg75
g301
sg68
(lp308
S''
asbasbasbag61
(g77
g63
NtRp309
(dp310
g66
(dp311
sg75
g263
sg68
(lp312
g61
(g82
g63
NtRp313
(dp314
g66
(dp315
g86
g87
ssg75
g309
sg68
(lp316
S'expires'
p317
asbag61
(g82
g63
NtRp318
(dp319
g66
(dp320
g93
g94
ssg75
g309
sg68
(lp321
S':'
asbag61
(g82
g63
NtRp322
(dp323
g66
(dp324
sg75
g309
sg68
(lp325
g61
(g62
g63
NtRp326
(dp327
g66
(dp328
g74
I3
ssg75
g322
sg68
(lp329
S''
asbasbasbag61
(g77
g63
NtRp330
(dp331
g66
(dp332
sg75
g263
sg68
(lp333
g61
(g82
g63
NtRp334
(dp335
g66
(dp336
g86
g87
ssg75
g330
sg68
(lp337
S'httponly'
p338
asbag61
(g82
g63
NtRp339
(dp340
g66
(dp341
g93
g94
ssg75
g330
sg68
(lp342
S':'
asbag61
(g82
g63
NtRp343
(dp344
g66
(dp345
sg75
g330
sg68
(lp346
g61
(g62
g63
NtRp347
(dp348
g66
(dp349
g74
I3
ssg75
g343
sg68
(lp350
S''
asbasbasbag61
(g77
g63
NtRp351
(dp352
g66
(dp353
sg75
g263
sg68
(lp354
g61
(g82
g63
NtRp355
(dp356
g66
(dp357
g86
g87
ssg75
g351
sg68
(lp358
S'max-age'
p359
asbag61
(g82
g63
NtRp360
(dp361
g66
(dp362
g93
g94
ssg75
g351
sg68
(lp363
S':'
asbag61
(g82
g63
NtRp364
(dp365
g66
(dp366
sg75
g351
sg68
(lp367
g61
(g62
g63
NtRp368
(dp369
g66
(dp370
g74
I3
ssg75
g364
sg68
(lp371
S''
asbasbasbag61
(g77
g63
NtRp372
(dp373
g66
(dp374
sg75
g263
sg68
(lp375
g61
(g82
g63
NtRp376
(dp377
g66
(dp378
g86
g87
ssg75
g372
sg68
(lp379
S'path'
p380
asbag61
(g82
g63
NtRp381
(dp382
g66
(dp383
g93
g94
ssg75
g372
sg68
(lp384
S':'
asbag61
(g82
g63
NtRp385
(dp386
g66
(dp387
sg75
g372
sg68
(lp388
g61
(g62
g63
NtRp389
(dp390
g66
(dp391
g74
I3
ssg75
g385
sg68
(lp392
S''
asbasbasbag61
(g77
g63
NtRp393
(dp394
g66
(dp395
sg75
g263
sg68
(lp396
g61
(g82
g63
NtRp397
(dp398
g66
(dp399
g86
g87
ssg75
g393
sg68
(lp400
S'secure'
p401
asbag61
(g82
g63
NtRp402
(dp403
g66
(dp404
g93
g94
ssg75
g393
sg68
(lp405
S':'
asbag61
(g82
g63
NtRp406
(dp407
g66
(dp408
sg75
g393
sg68
(lp409
g61
(g62
g63
NtRp410
(dp411
g66
(dp412
g74
I3
ssg75
g406
sg68
(lp413
S''
asbasbasbag61
(g77
g63
NtRp414
(dp415
g66
(dp416
sg75
g263
sg68
(lp417
g61
(g82
g63
NtRp418
(dp419
g66
(dp420
g86
g87
ssg75
g414
sg68
(lp421
S'version'
p422
asbag61
(g82
g63
NtRp423
(dp424
g66
(dp425
g93
g94
ssg75
g414
sg68
(lp426
S':'
asbag61
(g82
g63
NtRp427
(dp428
g66
(dp429
sg75
g414
sg68
(lp430
g61
(g62
g63
NtRp431
(dp432
g66
(dp433
g74
I3
ssg75
g427
sg68
(lp434
S''
asbasbasbasbasbasbasbag61
(g77
g63
NtRp435
(dp436
g66
(dp437
sg75
g238
sg68
(lp438
g61
(g82
g63
NtRp439
(dp440
g66
(dp441
g86
g87
ssg75
g435
sg68
(lp442
S'session_id_ajax_spreadsheet'
p443
asbag61
(g82
g63
NtRp444
(dp445
g66
(dp446
g93
g94
ssg75
g435
sg68
(lp447
S':'
asbag61
(g82
g63
NtRp448
(dp449
g66
(dp450
sg75
g435
sg68
(lp451
g61
(g62
g63
NtRp452
(dp453
g66
(dp454
g74
I4
ssg75
g448
sg68
(lp455
g61
(g70
g63
NtRp456
(dp457
g66
(dp458
g74
I3
ssg75
Nsg68
(lp459
g61
(g77
g63
NtRp460
(dp461
g66
(dp462
sg75
g456
sg68
(lp463
g61
(g82
g63
NtRp464
(dp465
g66
(dp466
g86
g87
ssg75
g460
sg68
(lp467
g275
asbag61
(g82
g63
NtRp468
(dp469
g66
(dp470
g93
g94
ssg75
g460
sg68
(lp471
S':'
asbag61
(g82
g63
NtRp472
(dp473
g66
(dp474
sg75
g460
sg68
(lp475
g61
(g62
g63
NtRp476
(dp477
g66
(dp478
g74
I3
ssg75
g472
sg68
(lp479
S''
asbasbasbag61
(g77
g63
NtRp480
(dp481
g66
(dp482
sg75
g456
sg68
(lp483
g61
(g82
g63
NtRp484
(dp485
g66
(dp486
g86
g87
ssg75
g480
sg68
(lp487
g296
asbag61
(g82
g63
NtRp488
(dp489
g66
(dp490
g93
g94
ssg75
g480
sg68
(lp491
S':'
asbag61
(g82
g63
NtRp492
(dp493
g66
(dp494
sg75
g480
sg68
(lp495
g61
(g62
g63
NtRp496
(dp497
g66
(dp498
g74
I3
ssg75
g492
sg68
(lp499
S''
asbasbasbag61
(g77
g63
NtRp500
(dp501
g66
(dp502
sg75
g456
sg68
(lp503
g61
(g82
g63
NtRp504
(dp505
g66
(dp506
g86
g87
ssg75
g500
sg68
(lp507
g317
asbag61
(g82
g63
NtRp508
(dp509
g66
(dp510
g93
g94
ssg75
g500
sg68
(lp511
S':'
asbag61
(g82
g63
NtRp512
(dp513
g66
(dp514
sg75
g500
sg68
(lp515
g61
(g62
g63
NtRp516
(dp517
g66
(dp518
g74
I3
ssg75
g512
sg68
(lp519
S''
asbasbasbag61
(g77
g63
NtRp520
(dp521
g66
(dp522
sg75
g456
sg68
(lp523
g61
(g82
g63
NtRp524
(dp525
g66
(dp526
g86
g87
ssg75
g520
sg68
(lp527
g338
asbag61
(g82
g63
NtRp528
(dp529
g66
(dp530
g93
g94
ssg75
g520
sg68
(lp531
S':'
asbag61
(g82
g63
NtRp532
(dp533
g66
(dp534
sg75
g520
sg68
(lp535
g61
(g62
g63
NtRp536
(dp537
g66
(dp538
g74
I3
ssg75
g532
sg68
(lp539
S''
asbasbasbag61
(g77
g63
NtRp540
(dp541
g66
(dp542
sg75
g456
sg68
(lp543
g61
(g82
g63
NtRp544
(dp545
g66
(dp546
g86
g87
ssg75
g540
sg68
(lp547
g359
asbag61
(g82
g63
NtRp548
(dp549
g66
(dp550
g93
g94
ssg75
g540
sg68
(lp551
S':'
asbag61
(g82
g63
NtRp552
(dp553
g66
(dp554
sg75
g540
sg68
(lp555
g61
(g62
g63
NtRp556
(dp557
g66
(dp558
g74
I3
ssg75
g552
sg68
(lp559
S''
asbasbasbag61
(g77
g63
NtRp560
(dp561
g66
(dp562
sg75
g456
sg68
(lp563
g61
(g82
g63
NtRp564
(dp565
g66
(dp566
g86
g87
ssg75
g560
sg68
(lp567
g380
asbag61
(g82
g63
NtRp568
(dp569
g66
(dp570
g93
g94
ssg75
g560
sg68
(lp571
S':'
asbag61
(g82
g63
NtRp572
(dp573
g66
(dp574
sg75
g560
sg68
(lp575
g61
(g62
g63
NtRp576
(dp577
g66
(dp578
g74
I3
ssg75
g572
sg68
(lp579
S''
asbasbasbag61
(g77
g63
NtRp580
(dp581
g66
(dp582
sg75
g456
sg68
(lp583
g61
(g82
g63
NtRp584
(dp585
g66
(dp586
g86
g87
ssg75
g580
sg68
(lp587
g401
asbag61
(g82
g63
NtRp588
(dp589
g66
(dp590
g93
g94
ssg75
g580
sg68
(lp591
S':'
asbag61
(g82
g63
NtRp592
(dp593
g66
(dp594
sg75
g580
sg68
(lp595
g61
(g62
g63
NtRp596
(dp597
g66
(dp598
g74
I3
ssg75
g592
sg68
(lp599
S''
asbasbasbag61
(g77
g63
NtRp600
(dp601
g66
(dp602
sg75
g456
sg68
(lp603
g61
(g82
g63
NtRp604
(dp605
g66
(dp606
g86
g87
ssg75
g600
sg68
(lp607
g422
asbag61
(g82
g63
NtRp608
(dp609
g66
(dp610
g93
g94
ssg75
g600
sg68
(lp611
S':'
asbag61
(g82
g63
NtRp612
(dp613
g66
(dp614
sg75
g600
sg68
(lp615
g61
(g62
g63
NtRp616
(dp617
g66
(dp618
g74
I3
ssg75
g612
sg68
(lp619
S''
asbasbasbasbasbasbasbag61
(g77
g63
NtRp620
(dp621
g66
(dp622
sg75
g238
sg68
(lp623
g61
(g82
g63
NtRp624
(dp625
g66
(dp626
g86
g87
ssg75
g620
sg68
(lp627
S'session_id_inventarioxo2'
p628
asbag61
(g82
g63
NtRp629
(dp630
g66
(dp631
g93
g94
ssg75
g620
sg68
(lp632
S':'
asbag61
(g82
g63
NtRp633
(dp634
g66
(dp635
sg75
g620
sg68
(lp636
g61
(g62
g63
NtRp637
(dp638
g66
(dp639
g74
I4
ssg75
g633
sg68
(lp640
g61
(g70
g63
NtRp641
(dp642
g66
(dp643
g74
I3
ssg75
Nsg68
(lp644
g61
(g77
g63
NtRp645
(dp646
g66
(dp647
sg75
g641
sg68
(lp648
g61
(g82
g63
NtRp649
(dp650
g66
(dp651
g86
g87
ssg75
g645
sg68
(lp652
g275
asbag61
(g82
g63
NtRp653
(dp654
g66
(dp655
g93
g94
ssg75
g645
sg68
(lp656
S':'
asbag61
(g82
g63
NtRp657
(dp658
g66
(dp659
sg75
g645
sg68
(lp660
g61
(g62
g63
NtRp661
(dp662
g66
(dp663
g74
I3
ssg75
g657
sg68
(lp664
S''
asbasbasbag61
(g77
g63
NtRp665
(dp666
g66
(dp667
sg75
g641
sg68
(lp668
g61
(g82
g63
NtRp669
(dp670
g66
(dp671
g86
g87
ssg75
g665
sg68
(lp672
g296
asbag61
(g82
g63
NtRp673
(dp674
g66
(dp675
g93
g94
ssg75
g665
sg68
(lp676
S':'
asbag61
(g82
g63
NtRp677
(dp678
g66
(dp679
sg75
g665
sg68
(lp680
g61
(g62
g63
NtRp681
(dp682
g66
(dp683
g74
I3
ssg75
g677
sg68
(lp684
S''
asbasbasbag61
(g77
g63
NtRp685
(dp686
g66
(dp687
sg75
g641
sg68
(lp688
g61
(g82
g63
NtRp689
(dp690
g66
(dp691
g86
g87
ssg75
g685
sg68
(lp692
g317
asbag61
(g82
g63
NtRp693
(dp694
g66
(dp695
g93
g94
ssg75
g685
sg68
(lp696
S':'
asbag61
(g82
g63
NtRp697
(dp698
g66
(dp699
sg75
g685
sg68
(lp700
g61
(g62
g63
NtRp701
(dp702
g66
(dp703
g74
I3
ssg75
g697
sg68
(lp704
S''
asbasbasbag61
(g77
g63
NtRp705
(dp706
g66
(dp707
sg75
g641
sg68
(lp708
g61
(g82
g63
NtRp709
(dp710
g66
(dp711
g86
g87
ssg75
g705
sg68
(lp712
g338
asbag61
(g82
g63
NtRp713
(dp714
g66
(dp715
g93
g94
ssg75
g705
sg68
(lp716
S':'
asbag61
(g82
g63
NtRp717
(dp718
g66
(dp719
sg75
g705
sg68
(lp720
g61
(g62
g63
NtRp721
(dp722
g66
(dp723
g74
I3
ssg75
g717
sg68
(lp724
S''
asbasbasbag61
(g77
g63
NtRp725
(dp726
g66
(dp727
sg75
g641
sg68
(lp728
g61
(g82
g63
NtRp729
(dp730
g66
(dp731
g86
g87
ssg75
g725
sg68
(lp732
g359
asbag61
(g82
g63
NtRp733
(dp734
g66
(dp735
g93
g94
ssg75
g725
sg68
(lp736
S':'
asbag61
(g82
g63
NtRp737
(dp738
g66
(dp739
sg75
g725
sg68
(lp740
g61
(g62
g63
NtRp741
(dp742
g66
(dp743
g74
I3
ssg75
g737
sg68
(lp744
S''
asbasbasbag61
(g77
g63
NtRp745
(dp746
g66
(dp747
sg75
g641
sg68
(lp748
g61
(g82
g63
NtRp749
(dp750
g66
(dp751
g86
g87
ssg75
g745
sg68
(lp752
g380
asbag61
(g82
g63
NtRp753
(dp754
g66
(dp755
g93
g94
ssg75
g745
sg68
(lp756
S':'
asbag61
(g82
g63
NtRp757
(dp758
g66
(dp759
sg75
g745
sg68
(lp760
g61
(g62
g63
NtRp761
(dp762
g66
(dp763
g74
I3
ssg75
g757
sg68
(lp764
S''
asbasbasbag61
(g77
g63
NtRp765
(dp766
g66
(dp767
sg75
g641
sg68
(lp768
g61
(g82
g63
NtRp769
(dp770
g66
(dp771
g86
g87
ssg75
g765
sg68
(lp772
g401
asbag61
(g82
g63
NtRp773
(dp774
g66
(dp775
g93
g94
ssg75
g765
sg68
(lp776
S':'
asbag61
(g82
g63
NtRp777
(dp778
g66
(dp779
sg75
g765
sg68
(lp780
g61
(g62
g63
NtRp781
(dp782
g66
(dp783
g74
I3
ssg75
g777
sg68
(lp784
S''
asbasbasbag61
(g77
g63
NtRp785
(dp786
g66
(dp787
sg75
g641
sg68
(lp788
g61
(g82
g63
NtRp789
(dp790
g66
(dp791
g86
g87
ssg75
g785
sg68
(lp792
g422
asbag61
(g82
g63
NtRp793
(dp794
g66
(dp795
g93
g94
ssg75
g785
sg68
(lp796
S':'
asbag61
(g82
g63
NtRp797
(dp798
g66
(dp799
sg75
g785
sg68
(lp800
g61
(g62
g63
NtRp801
(dp802
g66
(dp803
g74
I3
ssg75
g797
sg68
(lp804
S''
asbasbasbasbasbasbasbag61
(g77
g63
NtRp805
(dp806
g66
(dp807
sg75
g238
sg68
(lp808
g61
(g82
g63
NtRp809
(dp810
g66
(dp811
g86
g87
ssg75
g805
sg68
(lp812
S'session_id_inventoryxo'
p813
asbag61
(g82
g63
NtRp814
(dp815
g66
(dp816
g93
g94
ssg75
g805
sg68
(lp817
S':'
asbag61
(g82
g63
NtRp818
(dp819
g66
(dp820
sg75
g805
sg68
(lp821
g61
(g62
g63
NtRp822
(dp823
g66
(dp824
g74
I4
ssg75
g818
sg68
(lp825
g61
(g70
g63
NtRp826
(dp827
g66
(dp828
g74
I3
ssg75
Nsg68
(lp829
g61
(g77
g63
NtRp830
(dp831
g66
(dp832
sg75
g826
sg68
(lp833
g61
(g82
g63
NtRp834
(dp835
g66
(dp836
g86
g87
ssg75
g830
sg68
(lp837
g275
asbag61
(g82
g63
NtRp838
(dp839
g66
(dp840
g93
g94
ssg75
g830
sg68
(lp841
S':'
asbag61
(g82
g63
NtRp842
(dp843
g66
(dp844
sg75
g830
sg68
(lp845
g61
(g62
g63
NtRp846
(dp847
g66
(dp848
g74
I3
ssg75
g842
sg68
(lp849
S''
asbasbasbag61
(g77
g63
NtRp850
(dp851
g66
(dp852
sg75
g826
sg68
(lp853
g61
(g82
g63
NtRp854
(dp855
g66
(dp856
g86
g87
ssg75
g850
sg68
(lp857
g296
asbag61
(g82
g63
NtRp858
(dp859
g66
(dp860
g93
g94
ssg75
g850
sg68
(lp861
S':'
asbag61
(g82
g63
NtRp862
(dp863
g66
(dp864
sg75
g850
sg68
(lp865
g61
(g62
g63
NtRp866
(dp867
g66
(dp868
g74
I3
ssg75
g862
sg68
(lp869
S''
asbasbasbag61
(g77
g63
NtRp870
(dp871
g66
(dp872
sg75
g826
sg68
(lp873
g61
(g82
g63
NtRp874
(dp875
g66
(dp876
g86
g87
ssg75
g870
sg68
(lp877
g317
asbag61
(g82
g63
NtRp878
(dp879
g66
(dp880
g93
g94
ssg75
g870
sg68
(lp881
S':'
asbag61
(g82
g63
NtRp882
(dp883
g66
(dp884
sg75
g870
sg68
(lp885
g61
(g62
g63
NtRp886
(dp887
g66
(dp888
g74
I3
ssg75
g882
sg68
(lp889
S''
asbasbasbag61
(g77
g63
NtRp890
(dp891
g66
(dp892
sg75
g826
sg68
(lp893
g61
(g82
g63
NtRp894
(dp895
g66
(dp896
g86
g87
ssg75
g890
sg68
(lp897
g338
asbag61
(g82
g63
NtRp898
(dp899
g66
(dp900
g93
g94
ssg75
g890
sg68
(lp901
S':'
asbag61
(g82
g63
NtRp902
(dp903
g66
(dp904
sg75
g890
sg68
(lp905
g61
(g62
g63
NtRp906
(dp907
g66
(dp908
g74
I3
ssg75
g902
sg68
(lp909
S''
asbasbasbag61
(g77
g63
NtRp910
(dp911
g66
(dp912
sg75
g826
sg68
(lp913
g61
(g82
g63
NtRp914
(dp915
g66
(dp916
g86
g87
ssg75
g910
sg68
(lp917
g359
asbag61
(g82
g63
NtRp918
(dp919
g66
(dp920
g93
g94
ssg75
g910
sg68
(lp921
S':'
asbag61
(g82
g63
NtRp922
(dp923
g66
(dp924
sg75
g910
sg68
(lp925
g61
(g62
g63
NtRp926
(dp927
g66
(dp928
g74
I3
ssg75
g922
sg68
(lp929
S''
asbasbasbag61
(g77
g63
NtRp930
(dp931
g66
(dp932
sg75
g826
sg68
(lp933
g61
(g82
g63
NtRp934
(dp935
g66
(dp936
g86
g87
ssg75
g930
sg68
(lp937
g380
asbag61
(g82
g63
NtRp938
(dp939
g66
(dp940
g93
g94
ssg75
g930
sg68
(lp941
S':'
asbag61
(g82
g63
NtRp942
(dp943
g66
(dp944
sg75
g930
sg68
(lp945
g61
(g62
g63
NtRp946
(dp947
g66
(dp948
g74
I3
ssg75
g942
sg68
(lp949
S''
asbasbasbag61
(g77
g63
NtRp950
(dp951
g66
(dp952
sg75
g826
sg68
(lp953
g61
(g82
g63
NtRp954
(dp955
g66
(dp956
g86
g87
ssg75
g950
sg68
(lp957
g401
asbag61
(g82
g63
NtRp958
(dp959
g66
(dp960
g93
g94
ssg75
g950
sg68
(lp961
S':'
asbag61
(g82
g63
NtRp962
(dp963
g66
(dp964
sg75
g950
sg68
(lp965
g61
(g62
g63
NtRp966
(dp967
g66
(dp968
g74
I3
ssg75
g962
sg68
(lp969
S''
asbasbasbag61
(g77
g63
NtRp970
(dp971
g66
(dp972
sg75
g826
sg68
(lp973
g61
(g82
g63
NtRp974
(dp975
g66
(dp976
g86
g87
ssg75
g970
sg68
(lp977
g422
asbag61
(g82
g63
NtRp978
(dp979
g66
(dp980
g93
g94
ssg75
g970
sg68
(lp981
S':'
asbag61
(g82
g63
NtRp982
(dp983
g66
(dp984
sg75
g970
sg68
(lp985
g61
(g62
g63
NtRp986
(dp987
g66
(dp988
g74
I3
ssg75
g982
sg68
(lp989
S''
asbasbasbasbasbasbasbasbasbasbasbag61
(g77
g63
NtRp990
(dp991
g66
(dp992
sg75
g71
sg68
(lp993
g61
(g82
g63
NtRp994
(dp995
g66
(dp996
g86
g87
ssg75
g990
sg68
(lp997
S'env'
p998
asbag61
(g82
g63
NtRp999
(dp1000
g66
(dp1001
g93
g94
ssg75
g990
sg68
(lp1002
S':'
asbag61
(g82
g63
NtRp1003
(dp1004
g66
(dp1005
sg75
g990
sg68
(lp1006
g61
(g62
g63
NtRp1007
(dp1008
g66
(dp1009
g74
I5
ssg75
g1003
sg68
(lp1010
g61
(g70
g63
NtRp1011
(dp1012
g66
(dp1013
g74
I4
ssg75
Nsg68
(lp1014
g61
(g77
g63
NtRp1015
(dp1016
g66
(dp1017
sg75
g1011
sg68
(lp1018
g61
(g82
g63
NtRp1019
(dp1020
g66
(dp1021
g86
g87
ssg75
g1015
sg68
(lp1022
S'app_folders'
p1023
asbag61
(g82
g63
NtRp1024
(dp1025
g66
(dp1026
g93
g94
ssg75
g1015
sg68
(lp1027
S':'
asbag61
(g82
g63
NtRp1028
(dp1029
g66
(dp1030
sg75
g1015
sg68
(lp1031
g61
(g62
g63
NtRp1032
(dp1033
g66
(dp1034
g74
I4
ssg75
g1028
sg68
(lp1035
S"set(['/home/henry/Workspace/invent/final/web2py/applications/admin/'])"
p1036
asbasbasbag61
(g77
g63
NtRp1037
(dp1038
g66
(dp1039
sg75
g1011
sg68
(lp1040
g61
(g82
g63
NtRp1041
(dp1042
g66
(dp1043
g86
g87
ssg75
g1037
sg68
(lp1044
S'applications_parent'
p1045
asbag61
(g82
g63
NtRp1046
(dp1047
g66
(dp1048
g93
g94
ssg75
g1037
sg68
(lp1049
S':'
asbag61
(g82
g63
NtRp1050
(dp1051
g66
(dp1052
sg75
g1037
sg68
(lp1053
g61
(g62
g63
NtRp1054
(dp1055
g66
(dp1056
g74
I4
ssg75
g1050
sg68
(lp1057
S'/home/henry/Workspace/invent/final/web2py'
p1058
asbasbasbag61
(g77
g63
NtRp1059
(dp1060
g66
(dp1061
sg75
g1011
sg68
(lp1062
g61
(g82
g63
NtRp1063
(dp1064
g66
(dp1065
g86
g87
ssg75
g1059
sg68
(lp1066
S'cmd_args'
p1067
asbag61
(g82
g63
NtRp1068
(dp1069
g66
(dp1070
g93
g94
ssg75
g1059
sg68
(lp1071
S':'
asbag61
(g82
g63
NtRp1072
(dp1073
g66
(dp1074
sg75
g1059
sg68
(lp1075
g61
(g62
g63
NtRp1076
(dp1077
g66
(dp1078
g74
I4
ssg75
g1072
sg68
(lp1079
g61
(g70
g63
NtRp1080
(dp1081
g66
(dp1082
g74
I3
ssg75
Nsg68
(lp1083
sbasbasbasbag61
(g77
g63
NtRp1084
(dp1085
g66
(dp1086
sg75
g1011
sg68
(lp1087
g61
(g82
g63
NtRp1088
(dp1089
g66
(dp1090
g86
g87
ssg75
g1084
sg68
(lp1091
S'cmd_options'
p1092
asbag61
(g82
g63
NtRp1093
(dp1094
g66
(dp1095
g93
g94
ssg75
g1084
sg68
(lp1096
S':'
asbag61
(g82
g63
NtRp1097
(dp1098
g66
(dp1099
sg75
g1084
sg68
(lp1100
g61
(g62
g63
NtRp1101
(dp1102
g66
(dp1103
g74
I4
ssg75
g1097
sg68
(lp1104
S"<Values at 0x897d12c: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'localhost.localdomain', 'bpython': False, 'nogui': False, 'nocron': False, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': '/home/henry/Workspace/invent/final/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'profiler_filename': None, 'ssl_private_key': '', 'password': '123456', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'plain': False, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'numthreads': None, 'nobanner': False, 'pid_filename': 'httpserver.pid'}>"
p1105
asbasbasbag61
(g77
g63
NtRp1106
(dp1107
g66
(dp1108
sg75
g1011
sg68
(lp1109
g61
(g82
g63
NtRp1110
(dp1111
g66
(dp1112
g86
g87
ssg75
g1106
sg68
(lp1113
S'db_sessions'
p1114
asbag61
(g82
g63
NtRp1115
(dp1116
g66
(dp1117
g93
g94
ssg75
g1106
sg68
(lp1118
S':'
asbag61
(g82
g63
NtRp1119
(dp1120
g66
(dp1121
sg75
g1106
sg68
(lp1122
g61
(g62
g63
NtRp1123
(dp1124
g66
(dp1125
g74
I4
ssg75
g1119
sg68
(lp1126
S'set([])'
p1127
asbasbasbag61
(g77
g63
NtRp1128
(dp1129
g66
(dp1130
sg75
g1011
sg68
(lp1131
g61
(g82
g63
NtRp1132
(dp1133
g66
(dp1134
g86
g87
ssg75
g1128
sg68
(lp1135
S'debugging'
p1136
asbag61
(g82
g63
NtRp1137
(dp1138
g66
(dp1139
g93
g94
ssg75
g1128
sg68
(lp1140
S':'
asbag61
(g82
g63
NtRp1141
(dp1142
g66
(dp1143
sg75
g1128
sg68
(lp1144
g61
(g62
g63
NtRp1145
(dp1146
g66
(dp1147
g74
I4
ssg75
g1141
sg68
(lp1148
g104
asbasbasbag61
(g77
g63
NtRp1149
(dp1150
g66
(dp1151
sg75
g1011
sg68
(lp1152
g61
(g82
g63
NtRp1153
(dp1154
g66
(dp1155
g86
g87
ssg75
g1149
sg68
(lp1156
S'gluon_parent'
p1157
asbag61
(g82
g63
NtRp1158
(dp1159
g66
(dp1160
g93
g94
ssg75
g1149
sg68
(lp1161
S':'
asbag61
(g82
g63
NtRp1162
(dp1163
g66
(dp1164
sg75
g1149
sg68
(lp1165
g61
(g62
g63
NtRp1166
(dp1167
g66
(dp1168
g74
I4
ssg75
g1162
sg68
(lp1169
S'/home/henry/Workspace/invent/final/web2py'
p1170
asbasbasbag61
(g77
g63
NtRp1171
(dp1172
g66
(dp1173
sg75
g1011
sg68
(lp1174
g61
(g82
g63
NtRp1175
(dp1176
g66
(dp1177
g86
g87
ssg75
g1171
sg68
(lp1178
S'http_accept'
p1179
asbag61
(g82
g63
NtRp1180
(dp1181
g66
(dp1182
g93
g94
ssg75
g1171
sg68
(lp1183
S':'
asbag61
(g82
g63
NtRp1184
(dp1185
g66
(dp1186
sg75
g1171
sg68
(lp1187
g61
(g62
g63
NtRp1188
(dp1189
g66
(dp1190
g74
I4
ssg75
g1184
sg68
(lp1191
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p1192
asbasbasbag61
(g77
g63
NtRp1193
(dp1194
g66
(dp1195
sg75
g1011
sg68
(lp1196
g61
(g82
g63
NtRp1197
(dp1198
g66
(dp1199
g86
g87
ssg75
g1193
sg68
(lp1200
S'http_accept_charset'
p1201
asbag61
(g82
g63
NtRp1202
(dp1203
g66
(dp1204
g93
g94
ssg75
g1193
sg68
(lp1205
S':'
asbag61
(g82
g63
NtRp1206
(dp1207
g66
(dp1208
sg75
g1193
sg68
(lp1209
g61
(g62
g63
NtRp1210
(dp1211
g66
(dp1212
g74
I4
ssg75
g1206
sg68
(lp1213
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p1214
asbasbasbag61
(g77
g63
NtRp1215
(dp1216
g66
(dp1217
sg75
g1011
sg68
(lp1218
g61
(g82
g63
NtRp1219
(dp1220
g66
(dp1221
g86
g87
ssg75
g1215
sg68
(lp1222
S'http_accept_encoding'
p1223
asbag61
(g82
g63
NtRp1224
(dp1225
g66
(dp1226
g93
g94
ssg75
g1215
sg68
(lp1227
S':'
asbag61
(g82
g63
NtRp1228
(dp1229
g66
(dp1230
sg75
g1215
sg68
(lp1231
g61
(g62
g63
NtRp1232
(dp1233
g66
(dp1234
g74
I4
ssg75
g1228
sg68
(lp1235
S'gzip,deflate,sdch'
p1236
asbasbasbag61
(g77
g63
NtRp1237
(dp1238
g66
(dp1239
sg75
g1011
sg68
(lp1240
g61
(g82
g63
NtRp1241
(dp1242
g66
(dp1243
g86
g87
ssg75
g1237
sg68
(lp1244
S'http_accept_language'
p1245
asbag61
(g82
g63
NtRp1246
(dp1247
g66
(dp1248
g93
g94
ssg75
g1237
sg68
(lp1249
S':'
asbag61
(g82
g63
NtRp1250
(dp1251
g66
(dp1252
sg75
g1237
sg68
(lp1253
g61
(g62
g63
NtRp1254
(dp1255
g66
(dp1256
g74
I4
ssg75
g1250
sg68
(lp1257
S'en-US,en;q=0.8'
p1258
asbasbasbag61
(g77
g63
NtRp1259
(dp1260
g66
(dp1261
sg75
g1011
sg68
(lp1262
g61
(g82
g63
NtRp1263
(dp1264
g66
(dp1265
g86
g87
ssg75
g1259
sg68
(lp1266
S'http_cache_control'
p1267
asbag61
(g82
g63
NtRp1268
(dp1269
g66
(dp1270
g93
g94
ssg75
g1259
sg68
(lp1271
S':'
asbag61
(g82
g63
NtRp1272
(dp1273
g66
(dp1274
sg75
g1259
sg68
(lp1275
g61
(g62
g63
NtRp1276
(dp1277
g66
(dp1278
g74
I4
ssg75
g1272
sg68
(lp1279
S'max-age=0'
p1280
asbasbasbag61
(g77
g63
NtRp1281
(dp1282
g66
(dp1283
sg75
g1011
sg68
(lp1284
g61
(g82
g63
NtRp1285
(dp1286
g66
(dp1287
g86
g87
ssg75
g1281
sg68
(lp1288
S'http_connection'
p1289
asbag61
(g82
g63
NtRp1290
(dp1291
g66
(dp1292
g93
g94
ssg75
g1281
sg68
(lp1293
S':'
asbag61
(g82
g63
NtRp1294
(dp1295
g66
(dp1296
sg75
g1281
sg68
(lp1297
g61
(g62
g63
NtRp1298
(dp1299
g66
(dp1300
g74
I4
ssg75
g1294
sg68
(lp1301
S'keep-alive'
p1302
asbasbasbag61
(g77
g63
NtRp1303
(dp1304
g66
(dp1305
sg75
g1011
sg68
(lp1306
g61
(g82
g63
NtRp1307
(dp1308
g66
(dp1309
g86
g87
ssg75
g1303
sg68
(lp1310
S'http_cookie'
p1311
asbag61
(g82
g63
NtRp1312
(dp1313
g66
(dp1314
g93
g94
ssg75
g1303
sg68
(lp1315
S':'
asbag61
(g82
g63
NtRp1316
(dp1317
g66
(dp1318
sg75
g1303
sg68
(lp1319
g61
(g62
g63
NtRp1320
(dp1321
g66
(dp1322
g74
I4
ssg75
g1316
sg68
(lp1323
S'session_id_inventoryxo=127.0.0.1-4fd17867-b312-473e-8315-15c5c8227ac3; session_id_ajax_spreadsheet=127.0.0.1-56fb8519-8c30-4801-80b0-3a865299bbec; session_id_inventarioxo2=127.0.0.1-3c4fd130-1984-40e7-a81d-387d4128749a; session_id_admin=127.0.0.1-b921e8e0-1e24-4548-8c69-4bdf184e7479'
p1324
asbasbasbag61
(g77
g63
NtRp1325
(dp1326
g66
(dp1327
sg75
g1011
sg68
(lp1328
g61
(g82
g63
NtRp1329
(dp1330
g66
(dp1331
g86
g87
ssg75
g1325
sg68
(lp1332
S'http_host'
p1333
asbag61
(g82
g63
NtRp1334
(dp1335
g66
(dp1336
g93
g94
ssg75
g1325
sg68
(lp1337
S':'
asbag61
(g82
g63
NtRp1338
(dp1339
g66
(dp1340
sg75
g1325
sg68
(lp1341
g61
(g62
g63
NtRp1342
(dp1343
g66
(dp1344
g74
I4
ssg75
g1338
sg68
(lp1345
S'127.0.0.1:8000'
p1346
asbasbasbag61
(g77
g63
NtRp1347
(dp1348
g66
(dp1349
sg75
g1011
sg68
(lp1350
g61
(g82
g63
NtRp1351
(dp1352
g66
(dp1353
g86
g87
ssg75
g1347
sg68
(lp1354
S'http_referer'
p1355
asbag61
(g82
g63
NtRp1356
(dp1357
g66
(dp1358
g93
g94
ssg75
g1347
sg68
(lp1359
S':'
asbag61
(g82
g63
NtRp1360
(dp1361
g66
(dp1362
sg75
g1347
sg68
(lp1363
g61
(g62
g63
NtRp1364
(dp1365
g66
(dp1366
g74
I4
ssg75
g1360
sg68
(lp1367
S'http://127.0.0.1:8000/admin/default/index'
p1368
asbasbasbag61
(g77
g63
NtRp1369
(dp1370
g66
(dp1371
sg75
g1011
sg68
(lp1372
g61
(g82
g63
NtRp1373
(dp1374
g66
(dp1375
g86
g87
ssg75
g1369
sg68
(lp1376
S'http_user_agent'
p1377
asbag61
(g82
g63
NtRp1378
(dp1379
g66
(dp1380
g93
g94
ssg75
g1369
sg68
(lp1381
S':'
asbag61
(g82
g63
NtRp1382
(dp1383
g66
(dp1384
sg75
g1369
sg68
(lp1385
g61
(g62
g63
NtRp1386
(dp1387
g66
(dp1388
g74
I4
ssg75
g1382
sg68
(lp1389
S'Mozilla/5.0 (X11; Linux i686) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.835.186 Safari/535.1'
p1390
asbasbasbag61
(g77
g63
NtRp1391
(dp1392
g66
(dp1393
sg75
g1011
sg68
(lp1394
g61
(g82
g63
NtRp1395
(dp1396
g66
(dp1397
g86
g87
ssg75
g1391
sg68
(lp1398
S'path_info'
p1399
asbag61
(g82
g63
NtRp1400
(dp1401
g66
(dp1402
g93
g94
ssg75
g1391
sg68
(lp1403
S':'
asbag61
(g82
g63
NtRp1404
(dp1405
g66
(dp1406
sg75
g1391
sg68
(lp1407
g61
(g62
g63
NtRp1408
(dp1409
g66
(dp1410
g74
I4
ssg75
g1404
sg68
(lp1411
S'/admin/default/design'
p1412
asbasbasbag61
(g77
g63
NtRp1413
(dp1414
g66
(dp1415
sg75
g1011
sg68
(lp1416
g61
(g82
g63
NtRp1417
(dp1418
g66
(dp1419
g86
g87
ssg75
g1413
sg68
(lp1420
S'query_string'
p1421
asbag61
(g82
g63
NtRp1422
(dp1423
g66
(dp1424
g93
g94
ssg75
g1413
sg68
(lp1425
S':'
asbag61
(g82
g63
NtRp1426
(dp1427
g66
(dp1428
sg75
g1413
sg68
(lp1429
g61
(g62
g63
NtRp1430
(dp1431
g66
(dp1432
g74
I4
ssg75
g1426
sg68
(lp1433
S''
asbasbasbag61
(g77
g63
NtRp1434
(dp1435
g66
(dp1436
sg75
g1011
sg68
(lp1437
g61
(g82
g63
NtRp1438
(dp1439
g66
(dp1440
g86
g87
ssg75
g1434
sg68
(lp1441
S'remote_addr'
p1442
asbag61
(g82
g63
NtRp1443
(dp1444
g66
(dp1445
g93
g94
ssg75
g1434
sg68
(lp1446
S':'
asbag61
(g82
g63
NtRp1447
(dp1448
g66
(dp1449
sg75
g1434
sg68
(lp1450
g61
(g62
g63
NtRp1451
(dp1452
g66
(dp1453
g74
I4
ssg75
g1447
sg68
(lp1454
g194
asbasbasbag61
(g77
g63
NtRp1455
(dp1456
g66
(dp1457
sg75
g1011
sg68
(lp1458
g61
(g82
g63
NtRp1459
(dp1460
g66
(dp1461
g86
g87
ssg75
g1455
sg68
(lp1462
S'remote_port'
p1463
asbag61
(g82
g63
NtRp1464
(dp1465
g66
(dp1466
g93
g94
ssg75
g1455
sg68
(lp1467
S':'
asbag61
(g82
g63
NtRp1468
(dp1469
g66
(dp1470
sg75
g1455
sg68
(lp1471
g61
(g62
g63
NtRp1472
(dp1473
g66
(dp1474
g74
I4
ssg75
g1468
sg68
(lp1475
S'45168'
p1476
asbasbasbag61
(g77
g63
NtRp1477
(dp1478
g66
(dp1479
sg75
g1011
sg68
(lp1480
g61
(g82
g63
NtRp1481
(dp1482
g66
(dp1483
g86
g87
ssg75
g1477
sg68
(lp1484
S'request_method'
p1485
asbag61
(g82
g63
NtRp1486
(dp1487
g66
(dp1488
g93
g94
ssg75
g1477
sg68
(lp1489
S':'
asbag61
(g82
g63
NtRp1490
(dp1491
g66
(dp1492
sg75
g1477
sg68
(lp1493
g61
(g62
g63
NtRp1494
(dp1495
g66
(dp1496
g74
I4
ssg75
g1490
sg68
(lp1497
S'GET'
p1498
asbasbasbag61
(g77
g63
NtRp1499
(dp1500
g66
(dp1501
sg75
g1011
sg68
(lp1502
g61
(g82
g63
NtRp1503
(dp1504
g66
(dp1505
g86
g87
ssg75
g1499
sg68
(lp1506
S'script_name'
p1507
asbag61
(g82
g63
NtRp1508
(dp1509
g66
(dp1510
g93
g94
ssg75
g1499
sg68
(lp1511
S':'
asbag61
(g82
g63
NtRp1512
(dp1513
g66
(dp1514
sg75
g1499
sg68
(lp1515
g61
(g62
g63
NtRp1516
(dp1517
g66
(dp1518
g74
I4
ssg75
g1512
sg68
(lp1519
S''
asbasbasbag61
(g77
g63
NtRp1520
(dp1521
g66
(dp1522
sg75
g1011
sg68
(lp1523
g61
(g82
g63
NtRp1524
(dp1525
g66
(dp1526
g86
g87
ssg75
g1520
sg68
(lp1527
S'server_name'
p1528
asbag61
(g82
g63
NtRp1529
(dp1530
g66
(dp1531
g93
g94
ssg75
g1520
sg68
(lp1532
S':'
asbag61
(g82
g63
NtRp1533
(dp1534
g66
(dp1535
sg75
g1520
sg68
(lp1536
g61
(g62
g63
NtRp1537
(dp1538
g66
(dp1539
g74
I4
ssg75
g1533
sg68
(lp1540
S'localhost.localdomain'
p1541
asbasbasbag61
(g77
g63
NtRp1542
(dp1543
g66
(dp1544
sg75
g1011
sg68
(lp1545
g61
(g82
g63
NtRp1546
(dp1547
g66
(dp1548
g86
g87
ssg75
g1542
sg68
(lp1549
S'server_port'
p1550
asbag61
(g82
g63
NtRp1551
(dp1552
g66
(dp1553
g93
g94
ssg75
g1542
sg68
(lp1554
S':'
asbag61
(g82
g63
NtRp1555
(dp1556
g66
(dp1557
sg75
g1542
sg68
(lp1558
g61
(g62
g63
NtRp1559
(dp1560
g66
(dp1561
g74
I4
ssg75
g1555
sg68
(lp1562
S'8000'
p1563
asbasbasbag61
(g77
g63
NtRp1564
(dp1565
g66
(dp1566
sg75
g1011
sg68
(lp1567
g61
(g82
g63
NtRp1568
(dp1569
g66
(dp1570
g86
g87
ssg75
g1564
sg68
(lp1571
S'server_protocol'
p1572
asbag61
(g82
g63
NtRp1573
(dp1574
g66
(dp1575
g93
g94
ssg75
g1564
sg68
(lp1576
S':'
asbag61
(g82
g63
NtRp1577
(dp1578
g66
(dp1579
sg75
g1564
sg68
(lp1580
g61
(g62
g63
NtRp1581
(dp1582
g66
(dp1583
g74
I4
ssg75
g1577
sg68
(lp1584
S'HTTP/1.1'
p1585
asbasbasbag61
(g77
g63
NtRp1586
(dp1587
g66
(dp1588
sg75
g1011
sg68
(lp1589
g61
(g82
g63
NtRp1590
(dp1591
g66
(dp1592
g86
g87
ssg75
g1586
sg68
(lp1593
S'server_software'
p1594
asbag61
(g82
g63
NtRp1595
(dp1596
g66
(dp1597
g93
g94
ssg75
g1586
sg68
(lp1598
S':'
asbag61
(g82
g63
NtRp1599
(dp1600
g66
(dp1601
sg75
g1586
sg68
(lp1602
g61
(g62
g63
NtRp1603
(dp1604
g66
(dp1605
g74
I4
ssg75
g1599
sg68
(lp1606
S'Rocket 1.2.2'
p1607
asbasbasbag61
(g77
g63
NtRp1608
(dp1609
g66
(dp1610
sg75
g1011
sg68
(lp1611
g61
(g82
g63
NtRp1612
(dp1613
g66
(dp1614
g86
g87
ssg75
g1608
sg68
(lp1615
S'web2py_crontype'
p1616
asbag61
(g82
g63
NtRp1617
(dp1618
g66
(dp1619
g93
g94
ssg75
g1608
sg68
(lp1620
S':'
asbag61
(g82
g63
NtRp1621
(dp1622
g66
(dp1623
sg75
g1608
sg68
(lp1624
g61
(g62
g63
NtRp1625
(dp1626
g66
(dp1627
g74
I4
ssg75
g1621
sg68
(lp1628
S'hard'
p1629
asbasbasbag61
(g77
g63
NtRp1630
(dp1631
g66
(dp1632
sg75
g1011
sg68
(lp1633
g61
(g82
g63
NtRp1634
(dp1635
g66
(dp1636
g86
g87
ssg75
g1630
sg68
(lp1637
S'web2py_path'
p1638
asbag61
(g82
g63
NtRp1639
(dp1640
g66
(dp1641
g93
g94
ssg75
g1630
sg68
(lp1642
S':'
asbag61
(g82
g63
NtRp1643
(dp1644
g66
(dp1645
sg75
g1630
sg68
(lp1646
g61
(g62
g63
NtRp1647
(dp1648
g66
(dp1649
g74
I4
ssg75
g1643
sg68
(lp1650
g1058
asbasbasbag61
(g77
g63
NtRp1651
(dp1652
g66
(dp1653
sg75
g1011
sg68
(lp1654
g61
(g82
g63
NtRp1655
(dp1656
g66
(dp1657
g86
g87
ssg75
g1651
sg68
(lp1658
S'web2py_version'
p1659
asbag61
(g82
g63
NtRp1660
(dp1661
g66
(dp1662
g93
g94
ssg75
g1651
sg68
(lp1663
S':'
asbag61
(g82
g63
NtRp1664
(dp1665
g66
(dp1666
sg75
g1651
sg68
(lp1667
g61
(g62
g63
NtRp1668
(dp1669
g66
(dp1670
g74
I4
ssg75
g1664
sg68
(lp1671
S'Version 1.96.4 (2011-06-18 21:34:53)\n'
p1672
asbasbasbag61
(g77
g63
NtRp1673
(dp1674
g66
(dp1675
sg75
g1011
sg68
(lp1676
g61
(g82
g63
NtRp1677
(dp1678
g66
(dp1679
g86
g87
ssg75
g1673
sg68
(lp1680
S'wsgi_errors'
p1681
asbag61
(g82
g63
NtRp1682
(dp1683
g66
(dp1684
g93
g94
ssg75
g1673
sg68
(lp1685
S':'
asbag61
(g82
g63
NtRp1686
(dp1687
g66
(dp1688
sg75
g1673
sg68
(lp1689
g61
(g62
g63
NtRp1690
(dp1691
g66
(dp1692
g74
I4
ssg75
g1686
sg68
(lp1693
S"<open file '<stderr>', mode 'w' at 0xb78060d0>"
p1694
asbasbasbag61
(g77
g63
NtRp1695
(dp1696
g66
(dp1697
sg75
g1011
sg68
(lp1698
g61
(g82
g63
NtRp1699
(dp1700
g66
(dp1701
g86
g87
ssg75
g1695
sg68
(lp1702
S'wsgi_file_wrapper'
p1703
asbag61
(g82
g63
NtRp1704
(dp1705
g66
(dp1706
g93
g94
ssg75
g1695
sg68
(lp1707
S':'
asbag61
(g82
g63
NtRp1708
(dp1709
g66
(dp1710
sg75
g1695
sg68
(lp1711
g61
(g62
g63
NtRp1712
(dp1713
g66
(dp1714
g74
I4
ssg75
g1708
sg68
(lp1715
S'<class gluon.rocket.FileWrapper at 0x8945ddc>'
p1716
asbasbasbag61
(g77
g63
NtRp1717
(dp1718
g66
(dp1719
sg75
g1011
sg68
(lp1720
g61
(g82
g63
NtRp1721
(dp1722
g66
(dp1723
g86
g87
ssg75
g1717
sg68
(lp1724
S'wsgi_input'
p1725
asbag61
(g82
g63
NtRp1726
(dp1727
g66
(dp1728
g93
g94
ssg75
g1717
sg68
(lp1729
S':'
asbag61
(g82
g63
NtRp1730
(dp1731
g66
(dp1732
sg75
g1717
sg68
(lp1733
g61
(g62
g63
NtRp1734
(dp1735
g66
(dp1736
g74
I4
ssg75
g1730
sg68
(lp1737
S'<socket._fileobject object at 0x8b06e6c>'
p1738
asbasbasbag61
(g77
g63
NtRp1739
(dp1740
g66
(dp1741
sg75
g1011
sg68
(lp1742
g61
(g82
g63
NtRp1743
(dp1744
g66
(dp1745
g86
g87
ssg75
g1739
sg68
(lp1746
S'wsgi_multiprocess'
p1747
asbag61
(g82
g63
NtRp1748
(dp1749
g66
(dp1750
g93
g94
ssg75
g1739
sg68
(lp1751
S':'
asbag61
(g82
g63
NtRp1752
(dp1753
g66
(dp1754
sg75
g1739
sg68
(lp1755
g61
(g62
g63
NtRp1756
(dp1757
g66
(dp1758
g74
I4
ssg75
g1752
sg68
(lp1759
g104
asbasbasbag61
(g77
g63
NtRp1760
(dp1761
g66
(dp1762
sg75
g1011
sg68
(lp1763
g61
(g82
g63
NtRp1764
(dp1765
g66
(dp1766
g86
g87
ssg75
g1760
sg68
(lp1767
S'wsgi_multithread'
p1768
asbag61
(g82
g63
NtRp1769
(dp1770
g66
(dp1771
g93
g94
ssg75
g1760
sg68
(lp1772
S':'
asbag61
(g82
g63
NtRp1773
(dp1774
g66
(dp1775
sg75
g1760
sg68
(lp1776
g61
(g62
g63
NtRp1777
(dp1778
g66
(dp1779
g74
I4
ssg75
g1773
sg68
(lp1780
S'True'
p1781
asbasbasbag61
(g77
g63
NtRp1782
(dp1783
g66
(dp1784
sg75
g1011
sg68
(lp1785
g61
(g82
g63
NtRp1786
(dp1787
g66
(dp1788
g86
g87
ssg75
g1782
sg68
(lp1789
S'wsgi_run_once'
p1790
asbag61
(g82
g63
NtRp1791
(dp1792
g66
(dp1793
g93
g94
ssg75
g1782
sg68
(lp1794
S':'
asbag61
(g82
g63
NtRp1795
(dp1796
g66
(dp1797
sg75
g1782
sg68
(lp1798
g61
(g62
g63
NtRp1799
(dp1800
g66
(dp1801
g74
I4
ssg75
g1795
sg68
(lp1802
g104
asbasbasbag61
(g77
g63
NtRp1803
(dp1804
g66
(dp1805
sg75
g1011
sg68
(lp1806
g61
(g82
g63
NtRp1807
(dp1808
g66
(dp1809
g86
g87
ssg75
g1803
sg68
(lp1810
S'wsgi_url_scheme'
p1811
asbag61
(g82
g63
NtRp1812
(dp1813
g66
(dp1814
g93
g94
ssg75
g1803
sg68
(lp1815
S':'
asbag61
(g82
g63
NtRp1816
(dp1817
g66
(dp1818
sg75
g1803
sg68
(lp1819
g61
(g62
g63
NtRp1820
(dp1821
g66
(dp1822
g74
I4
ssg75
g1816
sg68
(lp1823
S'http'
p1824
asbasbasbag61
(g77
g63
NtRp1825
(dp1826
g66
(dp1827
sg75
g1011
sg68
(lp1828
g61
(g82
g63
NtRp1829
(dp1830
g66
(dp1831
g86
g87
ssg75
g1825
sg68
(lp1832
S'wsgi_version'
p1833
asbag61
(g82
g63
NtRp1834
(dp1835
g66
(dp1836
g93
g94
ssg75
g1825
sg68
(lp1837
S':'
asbag61
(g82
g63
NtRp1838
(dp1839
g66
(dp1840
sg75
g1825
sg68
(lp1841
g61
(g62
g63
NtRp1842
(dp1843
g66
(dp1844
g74
I4
ssg75
g1838
sg68
(lp1845
g61
(g70
g63
NtRp1846
(dp1847
g66
(dp1848
g74
I3
ssg75
Nsg68
(lp1849
g61
(g77
g63
NtRp1850
(dp1851
g66
(dp1852
sg75
g1846
sg68
(lp1853
g61
(g82
g63
NtRp1854
(dp1855
g66
(dp1856
sg75
g1850
sg68
(lp1857
g61
(g62
g63
NtRp1858
(dp1859
g66
(dp1860
g74
I3
ssg75
g1854
sg68
(lp1861
S'1'
asbasbasbag61
(g77
g63
NtRp1862
(dp1863
g66
(dp1864
sg75
g1846
sg68
(lp1865
g61
(g82
g63
NtRp1866
(dp1867
g66
(dp1868
sg75
g1862
sg68
(lp1869
g61
(g62
g63
NtRp1870
(dp1871
g66
(dp1872
g74
I3
ssg75
g1866
sg68
(lp1873
S'0'
asbasbasbasbasbasbasbasbasbasbasbag61
(g77
g63
NtRp1874
(dp1875
g66
(dp1876
sg75
g71
sg68
(lp1877
g61
(g82
g63
NtRp1878
(dp1879
g66
(dp1880
g86
g87
ssg75
g1874
sg68
(lp1881
S'extension'
p1882
asbag61
(g82
g63
NtRp1883
(dp1884
g66
(dp1885
g93
g94
ssg75
g1874
sg68
(lp1886
S':'
asbag61
(g82
g63
NtRp1887
(dp1888
g66
(dp1889
sg75
g1874
sg68
(lp1890
g61
(g62
g63
NtRp1891
(dp1892
g66
(dp1893
g74
I5
ssg75
g1887
sg68
(lp1894
S'html'
p1895
asbasbasbag61
(g77
g63
NtRp1896
(dp1897
g66
(dp1898
sg75
g71
sg68
(lp1899
g61
(g82
g63
NtRp1900
(dp1901
g66
(dp1902
g86
g87
ssg75
g1896
sg68
(lp1903
S'folder'
p1904
asbag61
(g82
g63
NtRp1905
(dp1906
g66
(dp1907
g93
g94
ssg75
g1896
sg68
(lp1908
S':'
asbag61
(g82
g63
NtRp1909
(dp1910
g66
(dp1911
sg75
g1896
sg68
(lp1912
g61
(g62
g63
NtRp1913
(dp1914
g66
(dp1915
g74
I5
ssg75
g1909
sg68
(lp1916
S'/home/henry/Workspace/invent/final/web2py/applications/admin/'
p1917
asbasbasbag61
(g77
g63
NtRp1918
(dp1919
g66
(dp1920
sg75
g71
sg68
(lp1921
g61
(g82
g63
NtRp1922
(dp1923
g66
(dp1924
g86
g87
ssg75
g1918
sg68
(lp1925
S'function'
p1926
asbag61
(g82
g63
NtRp1927
(dp1928
g66
(dp1929
g93
g94
ssg75
g1918
sg68
(lp1930
S':'
asbag61
(g82
g63
NtRp1931
(dp1932
g66
(dp1933
sg75
g1918
sg68
(lp1934
g61
(g62
g63
NtRp1935
(dp1936
g66
(dp1937
g74
I5
ssg75
g1931
sg68
(lp1938
S'design'
p1939
asbasbasbag61
(g77
g63
NtRp1940
(dp1941
g66
(dp1942
sg75
g71
sg68
(lp1943
g61
(g82
g63
NtRp1944
(dp1945
g66
(dp1946
g86
g87
ssg75
g1940
sg68
(lp1947
S'get_vars'
p1948
asbag61
(g82
g63
NtRp1949
(dp1950
g66
(dp1951
g93
g94
ssg75
g1940
sg68
(lp1952
S':'
asbag61
(g82
g63
NtRp1953
(dp1954
g66
(dp1955
sg75
g1940
sg68
(lp1956
g61
(g62
g63
NtRp1957
(dp1958
g66
(dp1959
g74
I5
ssg75
g1953
sg68
(lp1960
g61
(g70
g63
NtRp1961
(dp1962
g66
(dp1963
g74
I4
ssg75
Nsg68
(lp1964
sbasbasbasbag61
(g77
g63
NtRp1965
(dp1966
g66
(dp1967
sg75
g71
sg68
(lp1968
g61
(g82
g63
NtRp1969
(dp1970
g66
(dp1971
g86
g87
ssg75
g1965
sg68
(lp1972
S'is_https'
p1973
asbag61
(g82
g63
NtRp1974
(dp1975
g66
(dp1976
g93
g94
ssg75
g1965
sg68
(lp1977
S':'
asbag61
(g82
g63
NtRp1978
(dp1979
g66
(dp1980
sg75
g1965
sg68
(lp1981
g61
(g62
g63
NtRp1982
(dp1983
g66
(dp1984
g74
I5
ssg75
g1978
sg68
(lp1985
g104
asbasbasbag61
(g77
g63
NtRp1986
(dp1987
g66
(dp1988
sg75
g71
sg68
(lp1989
g61
(g82
g63
NtRp1990
(dp1991
g66
(dp1992
g86
g87
ssg75
g1986
sg68
(lp1993
S'is_local'
p1994
asbag61
(g82
g63
NtRp1995
(dp1996
g66
(dp1997
g93
g94
ssg75
g1986
sg68
(lp1998
S':'
asbag61
(g82
g63
NtRp1999
(dp2000
g66
(dp2001
sg75
g1986
sg68
(lp2002
g61
(g62
g63
NtRp2003
(dp2004
g66
(dp2005
g74
I5
ssg75
g1999
sg68
(lp2006
g1781
asbasbasbag61
(g77
g63
NtRp2007
(dp2008
g66
(dp2009
sg75
g71
sg68
(lp2010
g61
(g82
g63
NtRp2011
(dp2012
g66
(dp2013
g86
g87
ssg75
g2007
sg68
(lp2014
S'is_restful'
p2015
asbag61
(g82
g63
NtRp2016
(dp2017
g66
(dp2018
g93
g94
ssg75
g2007
sg68
(lp2019
S':'
asbag61
(g82
g63
NtRp2020
(dp2021
g66
(dp2022
sg75
g2007
sg68
(lp2023
g61
(g62
g63
NtRp2024
(dp2025
g66
(dp2026
g74
I5
ssg75
g2020
sg68
(lp2027
g104
asbasbasbag61
(g77
g63
NtRp2028
(dp2029
g66
(dp2030
sg75
g71
sg68
(lp2031
g61
(g82
g63
NtRp2032
(dp2033
g66
(dp2034
g86
g87
ssg75
g2028
sg68
(lp2035
S'now'
p2036
asbag61
(g82
g63
NtRp2037
(dp2038
g66
(dp2039
g93
g94
ssg75
g2028
sg68
(lp2040
S':'
asbag61
(g82
g63
NtRp2041
(dp2042
g66
(dp2043
sg75
g2028
sg68
(lp2044
g61
(g62
g63
NtRp2045
(dp2046
g66
(dp2047
g74
I5
ssg75
g2041
sg68
(lp2048
S'datetime.datetime(2011, 12, 16, 9, 48, 28, 866598)'
p2049
asbasbasbag61
(g77
g63
NtRp2050
(dp2051
g66
(dp2052
sg75
g71
sg68
(lp2053
g61
(g82
g63
NtRp2054
(dp2055
g66
(dp2056
g86
g87
ssg75
g2050
sg68
(lp2057
S'post_vars'
p2058
asbag61
(g82
g63
NtRp2059
(dp2060
g66
(dp2061
g93
g94
ssg75
g2050
sg68
(lp2062
S':'
asbag61
(g82
g63
NtRp2063
(dp2064
g66
(dp2065
sg75
g2050
sg68
(lp2066
g61
(g62
g63
NtRp2067
(dp2068
g66
(dp2069
g74
I5
ssg75
g2063
sg68
(lp2070
g61
(g70
g63
NtRp2071
(dp2072
g66
(dp2073
g74
I4
ssg75
Nsg68
(lp2074
sbasbasbasbag61
(g77
g63
NtRp2075
(dp2076
g66
(dp2077
sg75
g71
sg68
(lp2078
g61
(g82
g63
NtRp2079
(dp2080
g66
(dp2081
g86
g87
ssg75
g2075
sg68
(lp2082
S'url'
p2083
asbag61
(g82
g63
NtRp2084
(dp2085
g66
(dp2086
g93
g94
ssg75
g2075
sg68
(lp2087
S':'
asbag61
(g82
g63
NtRp2088
(dp2089
g66
(dp2090
sg75
g2075
sg68
(lp2091
g61
(g62
g63
NtRp2092
(dp2093
g66
(dp2094
g74
I5
ssg75
g2088
sg68
(lp2095
S'/admin/default/design'
p2096
asbasbasbag61
(g77
g63
NtRp2097
(dp2098
g66
(dp2099
sg75
g71
sg68
(lp2100
g61
(g82
g63
NtRp2101
(dp2102
g66
(dp2103
g86
g87
ssg75
g2097
sg68
(lp2104
S'uuid'
p2105
asbag61
(g82
g63
NtRp2106
(dp2107
g66
(dp2108
g93
g94
ssg75
g2097
sg68
(lp2109
S':'
asbag61
(g82
g63
NtRp2110
(dp2111
g66
(dp2112
sg75
g2097
sg68
(lp2113
g61
(g62
g63
NtRp2114
(dp2115
g66
(dp2116
g74
I5
ssg75
g2110
sg68
(lp2117
S'admin/127.0.0.1.2011-12-16.09-48-28.218b8a25-d18c-46f0-9acb-43cbd25b453a'
p2118
asbasbasbag61
(g77
g63
NtRp2119
(dp2120
g66
(dp2121
sg75
g71
sg68
(lp2122
g61
(g82
g63
NtRp2123
(dp2124
g66
(dp2125
g86
g87
ssg75
g2119
sg68
(lp2126
S'vars'
p2127
asbag61
(g82
g63
NtRp2128
(dp2129
g66
(dp2130
g93
g94
ssg75
g2119
sg68
(lp2131
S':'
asbag61
(g82
g63
NtRp2132
(dp2133
g66
(dp2134
sg75
g2119
sg68
(lp2135
g61
(g62
g63
NtRp2136
(dp2137
g66
(dp2138
g74
I5
ssg75
g2132
sg68
(lp2139
g61
(g70
g63
NtRp2140
(dp2141
g66
(dp2142
g74
I4
ssg75
Nsg68
(lp2143
sbasbasbasbag61
(g77
g63
NtRp2144
(dp2145
g66
(dp2146
sg75
g71
sg68
(lp2147
g61
(g82
g63
NtRp2148
(dp2149
g66
(dp2150
g86
g87
ssg75
g2144
sg68
(lp2151
S'wsgi'
p2152
asbag61
(g82
g63
NtRp2153
(dp2154
g66
(dp2155
g93
g94
ssg75
g2144
sg68
(lp2156
S':'
asbag61
(g82
g63
NtRp2157
(dp2158
g66
(dp2159
sg75
g2144
sg68
(lp2160
g61
(g62
g63
NtRp2161
(dp2162
g66
(dp2163
g74
I5
ssg75
g2157
sg68
(lp2164
g61
(g70
g63
NtRp2165
(dp2166
g66
(dp2167
g74
I4
ssg75
Nsg68
(lp2168
g61
(g77
g63
NtRp2169
(dp2170
g66
(dp2171
sg75
g2165
sg68
(lp2172
g61
(g82
g63
NtRp2173
(dp2174
g66
(dp2175
g86
g87
ssg75
g2169
sg68
(lp2176
S'environ'
p2177
asbag61
(g82
g63
NtRp2178
(dp2179
g66
(dp2180
g93
g94
ssg75
g2169
sg68
(lp2181
S':'
asbag61
(g82
g63
NtRp2182
(dp2183
g66
(dp2184
sg75
g2169
sg68
(lp2185
g61
(g62
g63
NtRp2186
(dp2187
g66
(dp2188
g74
I4
ssg75
g2182
sg68
(lp2189
g61
(g70
g63
NtRp2190
(dp2191
g66
(dp2192
g74
I3
ssg75
Nsg68
(lp2193
g61
(g77
g63
NtRp2194
(dp2195
g66
(dp2196
sg75
g2190
sg68
(lp2197
g61
(g82
g63
NtRp2198
(dp2199
g66
(dp2200
g86
g87
ssg75
g2194
sg68
(lp2201
S'HTTP_ACCEPT'
p2202
asbag61
(g82
g63
NtRp2203
(dp2204
g66
(dp2205
g93
g94
ssg75
g2194
sg68
(lp2206
S':'
asbag61
(g82
g63
NtRp2207
(dp2208
g66
(dp2209
sg75
g2194
sg68
(lp2210
g61
(g62
g63
NtRp2211
(dp2212
g66
(dp2213
g74
I3
ssg75
g2207
sg68
(lp2214
g1192
asbasbasbag61
(g77
g63
NtRp2215
(dp2216
g66
(dp2217
sg75
g2190
sg68
(lp2218
g61
(g82
g63
NtRp2219
(dp2220
g66
(dp2221
g86
g87
ssg75
g2215
sg68
(lp2222
S'HTTP_ACCEPT_CHARSET'
p2223
asbag61
(g82
g63
NtRp2224
(dp2225
g66
(dp2226
g93
g94
ssg75
g2215
sg68
(lp2227
S':'
asbag61
(g82
g63
NtRp2228
(dp2229
g66
(dp2230
sg75
g2215
sg68
(lp2231
g61
(g62
g63
NtRp2232
(dp2233
g66
(dp2234
g74
I3
ssg75
g2228
sg68
(lp2235
g1214
asbasbasbag61
(g77
g63
NtRp2236
(dp2237
g66
(dp2238
sg75
g2190
sg68
(lp2239
g61
(g82
g63
NtRp2240
(dp2241
g66
(dp2242
g86
g87
ssg75
g2236
sg68
(lp2243
S'HTTP_ACCEPT_ENCODING'
p2244
asbag61
(g82
g63
NtRp2245
(dp2246
g66
(dp2247
g93
g94
ssg75
g2236
sg68
(lp2248
S':'
asbag61
(g82
g63
NtRp2249
(dp2250
g66
(dp2251
sg75
g2236
sg68
(lp2252
g61
(g62
g63
NtRp2253
(dp2254
g66
(dp2255
g74
I3
ssg75
g2249
sg68
(lp2256
g1236
asbasbasbag61
(g77
g63
NtRp2257
(dp2258
g66
(dp2259
sg75
g2190
sg68
(lp2260
g61
(g82
g63
NtRp2261
(dp2262
g66
(dp2263
g86
g87
ssg75
g2257
sg68
(lp2264
S'HTTP_ACCEPT_LANGUAGE'
p2265
asbag61
(g82
g63
NtRp2266
(dp2267
g66
(dp2268
g93
g94
ssg75
g2257
sg68
(lp2269
S':'
asbag61
(g82
g63
NtRp2270
(dp2271
g66
(dp2272
sg75
g2257
sg68
(lp2273
g61
(g62
g63
NtRp2274
(dp2275
g66
(dp2276
g74
I3
ssg75
g2270
sg68
(lp2277
g1258
asbasbasbag61
(g77
g63
NtRp2278
(dp2279
g66
(dp2280
sg75
g2190
sg68
(lp2281
g61
(g82
g63
NtRp2282
(dp2283
g66
(dp2284
g86
g87
ssg75
g2278
sg68
(lp2285
S'HTTP_CACHE_CONTROL'
p2286
asbag61
(g82
g63
NtRp2287
(dp2288
g66
(dp2289
g93
g94
ssg75
g2278
sg68
(lp2290
S':'
asbag61
(g82
g63
NtRp2291
(dp2292
g66
(dp2293
sg75
g2278
sg68
(lp2294
g61
(g62
g63
NtRp2295
(dp2296
g66
(dp2297
g74
I3
ssg75
g2291
sg68
(lp2298
g1280
asbasbasbag61
(g77
g63
NtRp2299
(dp2300
g66
(dp2301
sg75
g2190
sg68
(lp2302
g61
(g82
g63
NtRp2303
(dp2304
g66
(dp2305
g86
g87
ssg75
g2299
sg68
(lp2306
S'HTTP_CONNECTION'
p2307
asbag61
(g82
g63
NtRp2308
(dp2309
g66
(dp2310
g93
g94
ssg75
g2299
sg68
(lp2311
S':'
asbag61
(g82
g63
NtRp2312
(dp2313
g66
(dp2314
sg75
g2299
sg68
(lp2315
g61
(g62
g63
NtRp2316
(dp2317
g66
(dp2318
g74
I3
ssg75
g2312
sg68
(lp2319
g1302
asbasbasbag61
(g77
g63
NtRp2320
(dp2321
g66
(dp2322
sg75
g2190
sg68
(lp2323
g61
(g82
g63
NtRp2324
(dp2325
g66
(dp2326
g86
g87
ssg75
g2320
sg68
(lp2327
S'HTTP_COOKIE'
p2328
asbag61
(g82
g63
NtRp2329
(dp2330
g66
(dp2331
g93
g94
ssg75
g2320
sg68
(lp2332
S':'
asbag61
(g82
g63
NtRp2333
(dp2334
g66
(dp2335
sg75
g2320
sg68
(lp2336
g61
(g62
g63
NtRp2337
(dp2338
g66
(dp2339
g74
I3
ssg75
g2333
sg68
(lp2340
g1324
asbasbasbag61
(g77
g63
NtRp2341
(dp2342
g66
(dp2343
sg75
g2190
sg68
(lp2344
g61
(g82
g63
NtRp2345
(dp2346
g66
(dp2347
g86
g87
ssg75
g2341
sg68
(lp2348
S'HTTP_HOST'
p2349
asbag61
(g82
g63
NtRp2350
(dp2351
g66
(dp2352
g93
g94
ssg75
g2341
sg68
(lp2353
S':'
asbag61
(g82
g63
NtRp2354
(dp2355
g66
(dp2356
sg75
g2341
sg68
(lp2357
g61
(g62
g63
NtRp2358
(dp2359
g66
(dp2360
g74
I3
ssg75
g2354
sg68
(lp2361
g1346
asbasbasbag61
(g77
g63
NtRp2362
(dp2363
g66
(dp2364
sg75
g2190
sg68
(lp2365
g61
(g82
g63
NtRp2366
(dp2367
g66
(dp2368
g86
g87
ssg75
g2362
sg68
(lp2369
S'HTTP_REFERER'
p2370
asbag61
(g82
g63
NtRp2371
(dp2372
g66
(dp2373
g93
g94
ssg75
g2362
sg68
(lp2374
S':'
asbag61
(g82
g63
NtRp2375
(dp2376
g66
(dp2377
sg75
g2362
sg68
(lp2378
g61
(g62
g63
NtRp2379
(dp2380
g66
(dp2381
g74
I3
ssg75
g2375
sg68
(lp2382
g1368
asbasbasbag61
(g77
g63
NtRp2383
(dp2384
g66
(dp2385
sg75
g2190
sg68
(lp2386
g61
(g82
g63
NtRp2387
(dp2388
g66
(dp2389
g86
g87
ssg75
g2383
sg68
(lp2390
S'HTTP_USER_AGENT'
p2391
asbag61
(g82
g63
NtRp2392
(dp2393
g66
(dp2394
g93
g94
ssg75
g2383
sg68
(lp2395
S':'
asbag61
(g82
g63
NtRp2396
(dp2397
g66
(dp2398
sg75
g2383
sg68
(lp2399
g61
(g62
g63
NtRp2400
(dp2401
g66
(dp2402
g74
I3
ssg75
g2396
sg68
(lp2403
g1390
asbasbasbag61
(g77
g63
NtRp2404
(dp2405
g66
(dp2406
sg75
g2190
sg68
(lp2407
g61
(g82
g63
NtRp2408
(dp2409
g66
(dp2410
g86
g87
ssg75
g2404
sg68
(lp2411
S'PATH_INFO'
p2412
asbag61
(g82
g63
NtRp2413
(dp2414
g66
(dp2415
g93
g94
ssg75
g2404
sg68
(lp2416
S':'
asbag61
(g82
g63
NtRp2417
(dp2418
g66
(dp2419
sg75
g2404
sg68
(lp2420
g61
(g62
g63
NtRp2421
(dp2422
g66
(dp2423
g74
I3
ssg75
g2417
sg68
(lp2424
g1412
asbasbasbag61
(g77
g63
NtRp2425
(dp2426
g66
(dp2427
sg75
g2190
sg68
(lp2428
g61
(g82
g63
NtRp2429
(dp2430
g66
(dp2431
g86
g87
ssg75
g2425
sg68
(lp2432
S'QUERY_STRING'
p2433
asbag61
(g82
g63
NtRp2434
(dp2435
g66
(dp2436
g93
g94
ssg75
g2425
sg68
(lp2437
S':'
asbag61
(g82
g63
NtRp2438
(dp2439
g66
(dp2440
sg75
g2425
sg68
(lp2441
g61
(g62
g63
NtRp2442
(dp2443
g66
(dp2444
g74
I3
ssg75
g2438
sg68
(lp2445
S''
asbasbasbag61
(g77
g63
NtRp2446
(dp2447
g66
(dp2448
sg75
g2190
sg68
(lp2449
g61
(g82
g63
NtRp2450
(dp2451
g66
(dp2452
g86
g87
ssg75
g2446
sg68
(lp2453
S'REMOTE_ADDR'
p2454
asbag61
(g82
g63
NtRp2455
(dp2456
g66
(dp2457
g93
g94
ssg75
g2446
sg68
(lp2458
S':'
asbag61
(g82
g63
NtRp2459
(dp2460
g66
(dp2461
sg75
g2446
sg68
(lp2462
g61
(g62
g63
NtRp2463
(dp2464
g66
(dp2465
g74
I3
ssg75
g2459
sg68
(lp2466
g194
asbasbasbag61
(g77
g63
NtRp2467
(dp2468
g66
(dp2469
sg75
g2190
sg68
(lp2470
g61
(g82
g63
NtRp2471
(dp2472
g66
(dp2473
g86
g87
ssg75
g2467
sg68
(lp2474
S'REMOTE_PORT'
p2475
asbag61
(g82
g63
NtRp2476
(dp2477
g66
(dp2478
g93
g94
ssg75
g2467
sg68
(lp2479
S':'
asbag61
(g82
g63
NtRp2480
(dp2481
g66
(dp2482
sg75
g2467
sg68
(lp2483
g61
(g62
g63
NtRp2484
(dp2485
g66
(dp2486
g74
I3
ssg75
g2480
sg68
(lp2487
g1476
asbasbasbag61
(g77
g63
NtRp2488
(dp2489
g66
(dp2490
sg75
g2190
sg68
(lp2491
g61
(g82
g63
NtRp2492
(dp2493
g66
(dp2494
g86
g87
ssg75
g2488
sg68
(lp2495
S'REQUEST_METHOD'
p2496
asbag61
(g82
g63
NtRp2497
(dp2498
g66
(dp2499
g93
g94
ssg75
g2488
sg68
(lp2500
S':'
asbag61
(g82
g63
NtRp2501
(dp2502
g66
(dp2503
sg75
g2488
sg68
(lp2504
g61
(g62
g63
NtRp2505
(dp2506
g66
(dp2507
g74
I3
ssg75
g2501
sg68
(lp2508
g1498
asbasbasbag61
(g77
g63
NtRp2509
(dp2510
g66
(dp2511
sg75
g2190
sg68
(lp2512
g61
(g82
g63
NtRp2513
(dp2514
g66
(dp2515
g86
g87
ssg75
g2509
sg68
(lp2516
S'SCRIPT_NAME'
p2517
asbag61
(g82
g63
NtRp2518
(dp2519
g66
(dp2520
g93
g94
ssg75
g2509
sg68
(lp2521
S':'
asbag61
(g82
g63
NtRp2522
(dp2523
g66
(dp2524
sg75
g2509
sg68
(lp2525
g61
(g62
g63
NtRp2526
(dp2527
g66
(dp2528
g74
I3
ssg75
g2522
sg68
(lp2529
S''
asbasbasbag61
(g77
g63
NtRp2530
(dp2531
g66
(dp2532
sg75
g2190
sg68
(lp2533
g61
(g82
g63
NtRp2534
(dp2535
g66
(dp2536
g86
g87
ssg75
g2530
sg68
(lp2537
S'SERVER_NAME'
p2538
asbag61
(g82
g63
NtRp2539
(dp2540
g66
(dp2541
g93
g94
ssg75
g2530
sg68
(lp2542
S':'
asbag61
(g82
g63
NtRp2543
(dp2544
g66
(dp2545
sg75
g2530
sg68
(lp2546
g61
(g62
g63
NtRp2547
(dp2548
g66
(dp2549
g74
I3
ssg75
g2543
sg68
(lp2550
g1541
asbasbasbag61
(g77
g63
NtRp2551
(dp2552
g66
(dp2553
sg75
g2190
sg68
(lp2554
g61
(g82
g63
NtRp2555
(dp2556
g66
(dp2557
g86
g87
ssg75
g2551
sg68
(lp2558
S'SERVER_PORT'
p2559
asbag61
(g82
g63
NtRp2560
(dp2561
g66
(dp2562
g93
g94
ssg75
g2551
sg68
(lp2563
S':'
asbag61
(g82
g63
NtRp2564
(dp2565
g66
(dp2566
sg75
g2551
sg68
(lp2567
g61
(g62
g63
NtRp2568
(dp2569
g66
(dp2570
g74
I3
ssg75
g2564
sg68
(lp2571
g1563
asbasbasbag61
(g77
g63
NtRp2572
(dp2573
g66
(dp2574
sg75
g2190
sg68
(lp2575
g61
(g82
g63
NtRp2576
(dp2577
g66
(dp2578
g86
g87
ssg75
g2572
sg68
(lp2579
S'SERVER_PROTOCOL'
p2580
asbag61
(g82
g63
NtRp2581
(dp2582
g66
(dp2583
g93
g94
ssg75
g2572
sg68
(lp2584
S':'
asbag61
(g82
g63
NtRp2585
(dp2586
g66
(dp2587
sg75
g2572
sg68
(lp2588
g61
(g62
g63
NtRp2589
(dp2590
g66
(dp2591
g74
I3
ssg75
g2585
sg68
(lp2592
g1585
asbasbasbag61
(g77
g63
NtRp2593
(dp2594
g66
(dp2595
sg75
g2190
sg68
(lp2596
g61
(g82
g63
NtRp2597
(dp2598
g66
(dp2599
g86
g87
ssg75
g2593
sg68
(lp2600
S'SERVER_SOFTWARE'
p2601
asbag61
(g82
g63
NtRp2602
(dp2603
g66
(dp2604
g93
g94
ssg75
g2593
sg68
(lp2605
S':'
asbag61
(g82
g63
NtRp2606
(dp2607
g66
(dp2608
sg75
g2593
sg68
(lp2609
g61
(g62
g63
NtRp2610
(dp2611
g66
(dp2612
g74
I3
ssg75
g2606
sg68
(lp2613
g1607
asbasbasbag61
(g77
g63
NtRp2614
(dp2615
g66
(dp2616
sg75
g2190
sg68
(lp2617
g61
(g82
g63
NtRp2618
(dp2619
g66
(dp2620
g86
g87
ssg75
g2614
sg68
(lp2621
S'wsgi.errors'
p2622
asbag61
(g82
g63
NtRp2623
(dp2624
g66
(dp2625
g93
g94
ssg75
g2614
sg68
(lp2626
S':'
asbag61
(g82
g63
NtRp2627
(dp2628
g66
(dp2629
sg75
g2614
sg68
(lp2630
g61
(g62
g63
NtRp2631
(dp2632
g66
(dp2633
g74
I3
ssg75
g2627
sg68
(lp2634
S"<open file '<stderr>', mode 'w' at 0xb78060d0>"
p2635
asbasbasbag61
(g77
g63
NtRp2636
(dp2637
g66
(dp2638
sg75
g2190
sg68
(lp2639
g61
(g82
g63
NtRp2640
(dp2641
g66
(dp2642
g86
g87
ssg75
g2636
sg68
(lp2643
S'wsgi.file_wrapper'
p2644
asbag61
(g82
g63
NtRp2645
(dp2646
g66
(dp2647
g93
g94
ssg75
g2636
sg68
(lp2648
S':'
asbag61
(g82
g63
NtRp2649
(dp2650
g66
(dp2651
sg75
g2636
sg68
(lp2652
g61
(g62
g63
NtRp2653
(dp2654
g66
(dp2655
g74
I3
ssg75
g2649
sg68
(lp2656
S'<class gluon.rocket.FileWrapper at 0x8945ddc>'
p2657
asbasbasbag61
(g77
g63
NtRp2658
(dp2659
g66
(dp2660
sg75
g2190
sg68
(lp2661
g61
(g82
g63
NtRp2662
(dp2663
g66
(dp2664
g86
g87
ssg75
g2658
sg68
(lp2665
S'wsgi.input'
p2666
asbag61
(g82
g63
NtRp2667
(dp2668
g66
(dp2669
g93
g94
ssg75
g2658
sg68
(lp2670
S':'
asbag61
(g82
g63
NtRp2671
(dp2672
g66
(dp2673
sg75
g2658
sg68
(lp2674
g61
(g62
g63
NtRp2675
(dp2676
g66
(dp2677
g74
I3
ssg75
g2671
sg68
(lp2678
S'<cStringIO.StringO object at 0xb058ab60>'
p2679
asbasbasbag61
(g77
g63
NtRp2680
(dp2681
g66
(dp2682
sg75
g2190
sg68
(lp2683
g61
(g82
g63
NtRp2684
(dp2685
g66
(dp2686
g86
g87
ssg75
g2680
sg68
(lp2687
S'wsgi.multiprocess'
p2688
asbag61
(g82
g63
NtRp2689
(dp2690
g66
(dp2691
g93
g94
ssg75
g2680
sg68
(lp2692
S':'
asbag61
(g82
g63
NtRp2693
(dp2694
g66
(dp2695
sg75
g2680
sg68
(lp2696
g61
(g62
g63
NtRp2697
(dp2698
g66
(dp2699
g74
I3
ssg75
g2693
sg68
(lp2700
g104
asbasbasbag61
(g77
g63
NtRp2701
(dp2702
g66
(dp2703
sg75
g2190
sg68
(lp2704
g61
(g82
g63
NtRp2705
(dp2706
g66
(dp2707
g86
g87
ssg75
g2701
sg68
(lp2708
S'wsgi.multithread'
p2709
asbag61
(g82
g63
NtRp2710
(dp2711
g66
(dp2712
g93
g94
ssg75
g2701
sg68
(lp2713
S':'
asbag61
(g82
g63
NtRp2714
(dp2715
g66
(dp2716
sg75
g2701
sg68
(lp2717
g61
(g62
g63
NtRp2718
(dp2719
g66
(dp2720
g74
I3
ssg75
g2714
sg68
(lp2721
g1781
asbasbasbag61
(g77
g63
NtRp2722
(dp2723
g66
(dp2724
sg75
g2190
sg68
(lp2725
g61
(g82
g63
NtRp2726
(dp2727
g66
(dp2728
g86
g87
ssg75
g2722
sg68
(lp2729
S'wsgi.run_once'
p2730
asbag61
(g82
g63
NtRp2731
(dp2732
g66
(dp2733
g93
g94
ssg75
g2722
sg68
(lp2734
S':'
asbag61
(g82
g63
NtRp2735
(dp2736
g66
(dp2737
sg75
g2722
sg68
(lp2738
g61
(g62
g63
NtRp2739
(dp2740
g66
(dp2741
g74
I3
ssg75
g2735
sg68
(lp2742
g104
asbasbasbag61
(g77
g63
NtRp2743
(dp2744
g66
(dp2745
sg75
g2190
sg68
(lp2746
g61
(g82
g63
NtRp2747
(dp2748
g66
(dp2749
g86
g87
ssg75
g2743
sg68
(lp2750
S'wsgi.url_scheme'
p2751
asbag61
(g82
g63
NtRp2752
(dp2753
g66
(dp2754
g93
g94
ssg75
g2743
sg68
(lp2755
S':'
asbag61
(g82
g63
NtRp2756
(dp2757
g66
(dp2758
sg75
g2743
sg68
(lp2759
g61
(g62
g63
NtRp2760
(dp2761
g66
(dp2762
g74
I3
ssg75
g2756
sg68
(lp2763
g1824
asbasbasbag61
(g77
g63
NtRp2764
(dp2765
g66
(dp2766
sg75
g2190
sg68
(lp2767
g61
(g82
g63
NtRp2768
(dp2769
g66
(dp2770
g86
g87
ssg75
g2764
sg68
(lp2771
S'wsgi.version'
p2772
asbag61
(g82
g63
NtRp2773
(dp2774
g66
(dp2775
g93
g94
ssg75
g2764
sg68
(lp2776
S':'
asbag61
(g82
g63
NtRp2777
(dp2778
g66
(dp2779
sg75
g2764
sg68
(lp2780
g61
(g62
g63
NtRp2781
(dp2782
g66
(dp2783
g74
I3
ssg75
g2777
sg68
(lp2784
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p2785
(lp2786
(dp2787
S'file'
p2788
S'/home/henry/Workspace/invent/final/web2py/gluon/restricted.py'
p2789
sS'dump'
p2790
(dp2791
S'environment'
p2792
S"{'A': <class 'gluon.html.A'>, 'ALLOW_TOGGLE': 'true', 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CHECK_VERSION': True, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, 'CODE': <class 'gluon.html.CODE'>, ...}"
p2793
sS'ccode'
p2794
S'<code object <module> at 0x8cfe068, file "/home/...plications/admin/controllers/default.py", line 3>'
p2795
ssS'lnum'
p2796
I192
sS'lines'
p2797
(dp2798
I192
S'        exec ccode in environment'
p2799
sI193
S'    except HTTP:'
p2800
sI194
S'        raise'
p2801
sI195
S'    except Exception:'
p2802
sI196
S'        # XXX Show exception in Wing IDE if running in debugger'
p2803
sI187
S'    try:'
p2804
sI188
S'        if type(code) == types.CodeType:'
p2805
sI189
S'            ccode = code'
p2806
sI190
S'        else:'
p2807
sI191
S'            ccode = compile2(code,layer)'
p2808
ssS'call'
p2809
S'(code="# coding: utf8\\n\\nfrom gluon.admin import *\\nfrom g...site\'))\\n\\nresponse._vars=response._caller(design)\\n", environment={\'A\': <class \'gluon.html.A\'>, \'ALLOW_TOGGLE\': \'true\', \'B\': <class \'gluon.html.B\'>, \'BEAUTIFY\': <class \'gluon.html.BEAUTIFY\'>, \'BODY\': <class \'gluon.html.BODY\'>, \'BR\': <class \'gluon.html.BR\'>, \'CENTER\': <class \'gluon.html.CENTER\'>, \'CHECK_VERSION\': True, \'CLEANUP\': <class \'gluon.validators.CLEANUP\'>, \'CODE\': <class \'gluon.html.CODE\'>, ...}, layer=\'/home/henry/Workspace/invent/final/web2py/applications/admin/controllers/default.py\')'
p2810
sS'func'
p2811
S'restricted'
p2812
sa(dp2813
g2788
S'/home/henry/Workspace/invent/final/web2py/applications/admin/controllers/default.py'
p2814
sg2790
(dp2815
sg2796
I1210
sg2797
(dp2816
I1199
S'        if not db(db.auth_user).count():'
p2817
sI1200
S'            auth.settings.registration_requires_approval = False'
p2818
sI1201
S'        return dict(form=auth())'
p2819
sI1202
S'    else:'
p2820
sI1203
S'        return dict(form=T("Disabled"))'
p2821
sI1204
S''
sI1205
S'def reload_routes():'
p2822
sI1206
S'   """ Reload routes.py """'
p2823
sI1207
S'   gluon.rewrite.load()'
p2824
sI1208
S"   redirect(URL('site'))"
p2825
ssg2809
S'()'
p2826
sg2811
S'<module>'
p2827
sa(dp2828
g2788
S'/home/henry/Workspace/invent/final/web2py/gluon/globals.py'
p2829
sg2790
(dp2830
S'self'
p2831
S'undefined'
p2832
sS'f'
S'<function design>'
p2833
ssg2796
I137
sg2797
(dp2834
I132
S"        self.flash = ''           # used by the default view layout"
p2835
sI133
S'        self.meta = Storage()     # used by web2py_ajax.html'
p2836
sI134
S'        self.menu = []            # used by the default view layout'
p2837
sI135
S'        self.files = []           # used by web2py_ajax.html'
p2838
sI136
S'        self._vars = None'
p2839
sI137
S'        self._caller = lambda f: f()'
p2840
sI138
S'        self._view_environment = None'
p2841
sI139
S'        self._custom_commit = None'
p2842
sI140
S'        self._custom_rollback = None'
p2843
sI141
S''
ssg2809
S'(f=<function design>)'
p2844
sg2811
S'<lambda>'
p2845
sa(dp2846
g2788
S'/home/henry/Workspace/invent/final/web2py/applications/admin/controllers/default.py'
p2847
sg2790
(dp2848
S'cronfolder'
p2849
S"'/home/henry/Workspace/invent/final/web2py/applications/None/cron'"
p2850
sS'os.path.exists'
p2851
S'<function exists>'
p2852
sS'global os'
p2853
S"<module 'os' from '/usr/lib/python2.7/os.pyc'>"
p2854
sS'os.mkdir'
p2855
S'<built-in function mkdir>'
p2856
sS'os.path'
p2857
S"<module 'posixpath' from '/usr/lib/python2.7/posixpath.pyc'>"
p2858
ssg2796
I730
sg2797
(dp2859
I725
S'    # Get all languages'
p2860
sI726
S"    languages = listdir(apath('%s/languages/' % app, r=request), '[\\w-]*\\.py')"
p2861
sI727
S''
sI728
S'    #Get crontab'
p2862
sI729
S"    cronfolder = apath('%s/cron' % app, r=request)"
p2863
sI730
S'    if not os.path.exists(cronfolder): os.mkdir(cronfolder)'
p2864
sI731
S"    crontab = apath('%s/cron/crontab' % app, r=request)"
p2865
sI732
S'    if not os.path.exists(crontab):'
p2866
sI733
S"        safe_write(crontab, '#crontab')"
p2867
sI734
S''
ssg2809
S'()'
p2868
sg2811
S'design'
p2869
sasS'pyver'
p2870
S'Python 2.7.1: /usr/bin/python'
p2871
sS'session'
p2872
g61
(g62
g63
NtRp2873
(dp2874
g66
(dp2875
sg68
(lp2876
g61
(g70
g63
NtRp2877
(dp2878
g66
(dp2879
g74
I5
ssg75
Nsg68
(lp2880
g61
(g77
g63
NtRp2881
(dp2882
g66
(dp2883
sg75
g2877
sg68
(lp2884
g61
(g82
g63
NtRp2885
(dp2886
g66
(dp2887
g86
g87
ssg75
g2881
sg68
(lp2888
S'authorized'
p2889
asbag61
(g82
g63
NtRp2890
(dp2891
g66
(dp2892
g93
g94
ssg75
g2881
sg68
(lp2893
S':'
asbag61
(g82
g63
NtRp2894
(dp2895
g66
(dp2896
sg75
g2881
sg68
(lp2897
g61
(g62
g63
NtRp2898
(dp2899
g66
(dp2900
g74
I5
ssg75
g2894
sg68
(lp2901
g1781
asbasbasbag61
(g77
g63
NtRp2902
(dp2903
g66
(dp2904
sg75
g2877
sg68
(lp2905
g61
(g82
g63
NtRp2906
(dp2907
g66
(dp2908
g86
g87
ssg75
g2902
sg68
(lp2909
S'check_version'
p2910
asbag61
(g82
g63
NtRp2911
(dp2912
g66
(dp2913
g93
g94
ssg75
g2902
sg68
(lp2914
S':'
asbag61
(g82
g63
NtRp2915
(dp2916
g66
(dp2917
sg75
g2902
sg68
(lp2918
g61
(g62
g63
NtRp2919
(dp2920
g66
(dp2921
g74
I5
ssg75
g2915
sg68
(lp2922
g1781
asbasbasbag61
(g77
g63
NtRp2923
(dp2924
g66
(dp2925
sg75
g2877
sg68
(lp2926
g61
(g82
g63
NtRp2927
(dp2928
g66
(dp2929
g86
g87
ssg75
g2923
sg68
(lp2930
S'last_time'
p2931
asbag61
(g82
g63
NtRp2932
(dp2933
g66
(dp2934
g93
g94
ssg75
g2923
sg68
(lp2935
S':'
asbag61
(g82
g63
NtRp2936
(dp2937
g66
(dp2938
sg75
g2923
sg68
(lp2939
g61
(g62
g63
NtRp2940
(dp2941
g66
(dp2942
g74
I5
ssg75
g2936
sg68
(lp2943
S'1324046908.871681'
p2944
asbasbasbasbasbsS'etype'
p2945
S"<type 'exceptions.OSError'>"
p2946
sS'date'
p2947
S'Fri Dec 16 09:48:28 2011'
p2948
sS'response'
p2949
g61
(g62
g63
NtRp2950
(dp2951
g66
(dp2952
sg68
(lp2953
g61
(g70
g63
NtRp2954
(dp2955
g66
(dp2956
g74
I5
ssg75
Nsg68
(lp2957
g61
(g77
g63
NtRp2958
(dp2959
g66
(dp2960
sg75
g2954
sg68
(lp2961
g61
(g82
g63
NtRp2962
(dp2963
g66
(dp2964
g86
g87
ssg75
g2958
sg68
(lp2965
g159
asbag61
(g82
g63
NtRp2966
(dp2967
g66
(dp2968
g93
g94
ssg75
g2958
sg68
(lp2969
S':'
asbag61
(g82
g63
NtRp2970
(dp2971
g66
(dp2972
sg75
g2958
sg68
(lp2973
g61
(g62
g63
NtRp2974
(dp2975
g66
(dp2976
g74
I5
ssg75
g2970
sg68
(lp2977
S'<cStringIO.StringO object at 0xb058a580>'
p2978
asbasbasbag61
(g77
g63
NtRp2979
(dp2980
g66
(dp2981
sg75
g2954
sg68
(lp2982
g61
(g82
g63
NtRp2983
(dp2984
g66
(dp2985
g86
g87
ssg75
g2979
sg68
(lp2986
g225
asbag61
(g82
g63
NtRp2987
(dp2988
g66
(dp2989
g93
g94
ssg75
g2979
sg68
(lp2990
S':'
asbag61
(g82
g63
NtRp2991
(dp2992
g66
(dp2993
sg75
g2979
sg68
(lp2994
g61
(g62
g63
NtRp2995
(dp2996
g66
(dp2997
g74
I5
ssg75
g2991
sg68
(lp2998
g61
(g70
g63
NtRp2999
(dp3000
g66
(dp3001
g74
I4
ssg75
Nsg68
(lp3002
g61
(g77
g63
NtRp3003
(dp3004
g66
(dp3005
sg75
g2999
sg68
(lp3006
g61
(g82
g63
NtRp3007
(dp3008
g66
(dp3009
g86
g87
ssg75
g3003
sg68
(lp3010
S'session_id_admin'
p3011
asbag61
(g82
g63
NtRp3012
(dp3013
g66
(dp3014
g93
g94
ssg75
g3003
sg68
(lp3015
S':'
asbag61
(g82
g63
NtRp3016
(dp3017
g66
(dp3018
sg75
g3003
sg68
(lp3019
g61
(g62
g63
NtRp3020
(dp3021
g66
(dp3022
g74
I4
ssg75
g3016
sg68
(lp3023
g61
(g70
g63
NtRp3024
(dp3025
g66
(dp3026
g74
I3
ssg75
Nsg68
(lp3027
g61
(g77
g63
NtRp3028
(dp3029
g66
(dp3030
sg75
g3024
sg68
(lp3031
g61
(g82
g63
NtRp3032
(dp3033
g66
(dp3034
g86
g87
ssg75
g3028
sg68
(lp3035
g275
asbag61
(g82
g63
NtRp3036
(dp3037
g66
(dp3038
g93
g94
ssg75
g3028
sg68
(lp3039
S':'
asbag61
(g82
g63
NtRp3040
(dp3041
g66
(dp3042
sg75
g3028
sg68
(lp3043
g61
(g62
g63
NtRp3044
(dp3045
g66
(dp3046
g74
I3
ssg75
g3040
sg68
(lp3047
S''
asbasbasbag61
(g77
g63
NtRp3048
(dp3049
g66
(dp3050
sg75
g3024
sg68
(lp3051
g61
(g82
g63
NtRp3052
(dp3053
g66
(dp3054
g86
g87
ssg75
g3048
sg68
(lp3055
g296
asbag61
(g82
g63
NtRp3056
(dp3057
g66
(dp3058
g93
g94
ssg75
g3048
sg68
(lp3059
S':'
asbag61
(g82
g63
NtRp3060
(dp3061
g66
(dp3062
sg75
g3048
sg68
(lp3063
g61
(g62
g63
NtRp3064
(dp3065
g66
(dp3066
g74
I3
ssg75
g3060
sg68
(lp3067
S''
asbasbasbag61
(g77
g63
NtRp3068
(dp3069
g66
(dp3070
sg75
g3024
sg68
(lp3071
g61
(g82
g63
NtRp3072
(dp3073
g66
(dp3074
g86
g87
ssg75
g3068
sg68
(lp3075
g317
asbag61
(g82
g63
NtRp3076
(dp3077
g66
(dp3078
g93
g94
ssg75
g3068
sg68
(lp3079
S':'
asbag61
(g82
g63
NtRp3080
(dp3081
g66
(dp3082
sg75
g3068
sg68
(lp3083
g61
(g62
g63
NtRp3084
(dp3085
g66
(dp3086
g74
I3
ssg75
g3080
sg68
(lp3087
S''
asbasbasbag61
(g77
g63
NtRp3088
(dp3089
g66
(dp3090
sg75
g3024
sg68
(lp3091
g61
(g82
g63
NtRp3092
(dp3093
g66
(dp3094
g86
g87
ssg75
g3088
sg68
(lp3095
g338
asbag61
(g82
g63
NtRp3096
(dp3097
g66
(dp3098
g93
g94
ssg75
g3088
sg68
(lp3099
S':'
asbag61
(g82
g63
NtRp3100
(dp3101
g66
(dp3102
sg75
g3088
sg68
(lp3103
g61
(g62
g63
NtRp3104
(dp3105
g66
(dp3106
g74
I3
ssg75
g3100
sg68
(lp3107
S''
asbasbasbag61
(g77
g63
NtRp3108
(dp3109
g66
(dp3110
sg75
g3024
sg68
(lp3111
g61
(g82
g63
NtRp3112
(dp3113
g66
(dp3114
g86
g87
ssg75
g3108
sg68
(lp3115
g359
asbag61
(g82
g63
NtRp3116
(dp3117
g66
(dp3118
g93
g94
ssg75
g3108
sg68
(lp3119
S':'
asbag61
(g82
g63
NtRp3120
(dp3121
g66
(dp3122
sg75
g3108
sg68
(lp3123
g61
(g62
g63
NtRp3124
(dp3125
g66
(dp3126
g74
I3
ssg75
g3120
sg68
(lp3127
S''
asbasbasbag61
(g77
g63
NtRp3128
(dp3129
g66
(dp3130
sg75
g3024
sg68
(lp3131
g61
(g82
g63
NtRp3132
(dp3133
g66
(dp3134
g86
g87
ssg75
g3128
sg68
(lp3135
g380
asbag61
(g82
g63
NtRp3136
(dp3137
g66
(dp3138
g93
g94
ssg75
g3128
sg68
(lp3139
S':'
asbag61
(g82
g63
NtRp3140
(dp3141
g66
(dp3142
sg75
g3128
sg68
(lp3143
g61
(g62
g63
NtRp3144
(dp3145
g66
(dp3146
g74
I3
ssg75
g3140
sg68
(lp3147
S'/'
asbasbasbag61
(g77
g63
NtRp3148
(dp3149
g66
(dp3150
sg75
g3024
sg68
(lp3151
g61
(g82
g63
NtRp3152
(dp3153
g66
(dp3154
g86
g87
ssg75
g3148
sg68
(lp3155
g401
asbag61
(g82
g63
NtRp3156
(dp3157
g66
(dp3158
g93
g94
ssg75
g3148
sg68
(lp3159
S':'
asbag61
(g82
g63
NtRp3160
(dp3161
g66
(dp3162
sg75
g3148
sg68
(lp3163
g61
(g62
g63
NtRp3164
(dp3165
g66
(dp3166
g74
I3
ssg75
g3160
sg68
(lp3167
S''
asbasbasbag61
(g77
g63
NtRp3168
(dp3169
g66
(dp3170
sg75
g3024
sg68
(lp3171
g61
(g82
g63
NtRp3172
(dp3173
g66
(dp3174
g86
g87
ssg75
g3168
sg68
(lp3175
g422
asbag61
(g82
g63
NtRp3176
(dp3177
g66
(dp3178
g93
g94
ssg75
g3168
sg68
(lp3179
S':'
asbag61
(g82
g63
NtRp3180
(dp3181
g66
(dp3182
sg75
g3168
sg68
(lp3183
g61
(g62
g63
NtRp3184
(dp3185
g66
(dp3186
g74
I3
ssg75
g3180
sg68
(lp3187
S''
asbasbasbasbasbasbasbasbasbasbasbag61
(g77
g63
NtRp3188
(dp3189
g66
(dp3190
sg75
g2954
sg68
(lp3191
g61
(g82
g63
NtRp3192
(dp3193
g66
(dp3194
g86
g87
ssg75
g3188
sg68
(lp3195
S'files'
p3196
asbag61
(g82
g63
NtRp3197
(dp3198
g66
(dp3199
g93
g94
ssg75
g3188
sg68
(lp3200
S':'
asbag61
(g82
g63
NtRp3201
(dp3202
g66
(dp3203
sg75
g3188
sg68
(lp3204
g61
(g62
g63
NtRp3205
(dp3206
g66
(dp3207
g74
I5
ssg75
g3201
sg68
(lp3208
g61
(g70
g63
NtRp3209
(dp3210
g66
(dp3211
g74
I4
ssg75
Nsg68
(lp3212
g61
(g77
g63
NtRp3213
(dp3214
g66
(dp3215
sg75
g3209
sg68
(lp3216
g61
(g82
g63
NtRp3217
(dp3218
g66
(dp3219
sg75
g3213
sg68
(lp3220
g61
(g62
g63
NtRp3221
(dp3222
g66
(dp3223
g74
I4
ssg75
g3217
sg68
(lp3224
S'/admin/static/plugin_multiselect/jquery.dimensions.js'
p3225
asbasbasbag61
(g77
g63
NtRp3226
(dp3227
g66
(dp3228
sg75
g3209
sg68
(lp3229
g61
(g82
g63
NtRp3230
(dp3231
g66
(dp3232
sg75
g3226
sg68
(lp3233
g61
(g62
g63
NtRp3234
(dp3235
g66
(dp3236
g74
I4
ssg75
g3230
sg68
(lp3237
S'/admin/static/plugin_multiselect/jquery.multiselect.js'
p3238
asbasbasbag61
(g77
g63
NtRp3239
(dp3240
g66
(dp3241
sg75
g3209
sg68
(lp3242
g61
(g82
g63
NtRp3243
(dp3244
g66
(dp3245
sg75
g3239
sg68
(lp3246
g61
(g62
g63
NtRp3247
(dp3248
g66
(dp3249
g74
I4
ssg75
g3243
sg68
(lp3250
S'/admin/static/plugin_multiselect/jquery.multiselect.css'
p3251
asbasbasbag61
(g77
g63
NtRp3252
(dp3253
g66
(dp3254
sg75
g3209
sg68
(lp3255
g61
(g82
g63
NtRp3256
(dp3257
g66
(dp3258
sg75
g3252
sg68
(lp3259
g61
(g62
g63
NtRp3260
(dp3261
g66
(dp3262
g74
I4
ssg75
g3256
sg68
(lp3263
S'/admin/static/plugin_multiselect/start.js'
p3264
asbasbasbasbasbasbasbag61
(g77
g63
NtRp3265
(dp3266
g66
(dp3267
sg75
g2954
sg68
(lp3268
g61
(g82
g63
NtRp3269
(dp3270
g66
(dp3271
g86
g87
ssg75
g3265
sg68
(lp3272
S'flash'
p3273
asbag61
(g82
g63
NtRp3274
(dp3275
g66
(dp3276
g93
g94
ssg75
g3265
sg68
(lp3277
S':'
asbag61
(g82
g63
NtRp3278
(dp3279
g66
(dp3280
sg75
g3265
sg68
(lp3281
g61
(g62
g63
NtRp3282
(dp3283
g66
(dp3284
g74
I5
ssg75
g3278
sg68
(lp3285
S''
asbasbasbag61
(g77
g63
NtRp3286
(dp3287
g66
(dp3288
sg75
g2954
sg68
(lp3289
g61
(g82
g63
NtRp3290
(dp3291
g66
(dp3292
g86
g87
ssg75
g3286
sg68
(lp3293
S'headers'
p3294
asbag61
(g82
g63
NtRp3295
(dp3296
g66
(dp3297
g93
g94
ssg75
g3286
sg68
(lp3298
S':'
asbag61
(g82
g63
NtRp3299
(dp3300
g66
(dp3301
sg75
g3286
sg68
(lp3302
g61
(g62
g63
NtRp3303
(dp3304
g66
(dp3305
g74
I5
ssg75
g3299
sg68
(lp3306
g61
(g70
g63
NtRp3307
(dp3308
g66
(dp3309
g74
I4
ssg75
Nsg68
(lp3310
g61
(g77
g63
NtRp3311
(dp3312
g66
(dp3313
sg75
g3307
sg68
(lp3314
g61
(g82
g63
NtRp3315
(dp3316
g66
(dp3317
g86
g87
ssg75
g3311
sg68
(lp3318
S'Cache-Control'
p3319
asbag61
(g82
g63
NtRp3320
(dp3321
g66
(dp3322
g93
g94
ssg75
g3311
sg68
(lp3323
S':'
asbag61
(g82
g63
NtRp3324
(dp3325
g66
(dp3326
sg75
g3311
sg68
(lp3327
g61
(g62
g63
NtRp3328
(dp3329
g66
(dp3330
g74
I4
ssg75
g3324
sg68
(lp3331
S'no-store, no-cache, must-revalidate, post-check=0, pre-check=0'
p3332
asbasbasbag61
(g77
g63
NtRp3333
(dp3334
g66
(dp3335
sg75
g3307
sg68
(lp3336
g61
(g82
g63
NtRp3337
(dp3338
g66
(dp3339
g86
g87
ssg75
g3333
sg68
(lp3340
S'Content-Type'
p3341
asbag61
(g82
g63
NtRp3342
(dp3343
g66
(dp3344
g93
g94
ssg75
g3333
sg68
(lp3345
S':'
asbag61
(g82
g63
NtRp3346
(dp3347
g66
(dp3348
sg75
g3333
sg68
(lp3349
g61
(g62
g63
NtRp3350
(dp3351
g66
(dp3352
g74
I4
ssg75
g3346
sg68
(lp3353
S'text/html; charset=utf-8'
p3354
asbasbasbag61
(g77
g63
NtRp3355
(dp3356
g66
(dp3357
sg75
g3307
sg68
(lp3358
g61
(g82
g63
NtRp3359
(dp3360
g66
(dp3361
g86
g87
ssg75
g3355
sg68
(lp3362
S'Expires'
p3363
asbag61
(g82
g63
NtRp3364
(dp3365
g66
(dp3366
g93
g94
ssg75
g3355
sg68
(lp3367
S':'
asbag61
(g82
g63
NtRp3368
(dp3369
g66
(dp3370
sg75
g3355
sg68
(lp3371
g61
(g62
g63
NtRp3372
(dp3373
g66
(dp3374
g74
I4
ssg75
g3368
sg68
(lp3375
S'Fri, 16 Dec 2011 14:48:28 GMT'
p3376
asbasbasbag61
(g77
g63
NtRp3377
(dp3378
g66
(dp3379
sg75
g3307
sg68
(lp3380
g61
(g82
g63
NtRp3381
(dp3382
g66
(dp3383
g86
g87
ssg75
g3377
sg68
(lp3384
S'Pragma'
p3385
asbag61
(g82
g63
NtRp3386
(dp3387
g66
(dp3388
g93
g94
ssg75
g3377
sg68
(lp3389
S':'
asbag61
(g82
g63
NtRp3390
(dp3391
g66
(dp3392
sg75
g3377
sg68
(lp3393
g61
(g62
g63
NtRp3394
(dp3395
g66
(dp3396
g74
I4
ssg75
g3390
sg68
(lp3397
S'no-cache'
p3398
asbasbasbag61
(g77
g63
NtRp3399
(dp3400
g66
(dp3401
sg75
g3307
sg68
(lp3402
g61
(g82
g63
NtRp3403
(dp3404
g66
(dp3405
g86
g87
ssg75
g3399
sg68
(lp3406
S'X-Powered-By'
p3407
asbag61
(g82
g63
NtRp3408
(dp3409
g66
(dp3410
g93
g94
ssg75
g3399
sg68
(lp3411
S':'
asbag61
(g82
g63
NtRp3412
(dp3413
g66
(dp3414
sg75
g3399
sg68
(lp3415
g61
(g62
g63
NtRp3416
(dp3417
g66
(dp3418
g74
I4
ssg75
g3412
sg68
(lp3419
S'web2py'
p3420
asbasbasbasbasbasbasbag61
(g77
g63
NtRp3421
(dp3422
g66
(dp3423
sg75
g2954
sg68
(lp3424
g61
(g82
g63
NtRp3425
(dp3426
g66
(dp3427
g86
g87
ssg75
g3421
sg68
(lp3428
S'menu'
p3429
asbag61
(g82
g63
NtRp3430
(dp3431
g66
(dp3432
g93
g94
ssg75
g3421
sg68
(lp3433
S':'
asbag61
(g82
g63
NtRp3434
(dp3435
g66
(dp3436
sg75
g3421
sg68
(lp3437
g61
(g62
g63
NtRp3438
(dp3439
g66
(dp3440
g74
I5
ssg75
g3434
sg68
(lp3441
g61
(g70
g63
NtRp3442
(dp3443
g66
(dp3444
g74
I4
ssg75
Nsg68
(lp3445
g61
(g77
g63
NtRp3446
(dp3447
g66
(dp3448
sg75
g3442
sg68
(lp3449
g61
(g82
g63
NtRp3450
(dp3451
g66
(dp3452
sg75
g3446
sg68
(lp3453
g61
(g62
g63
NtRp3454
(dp3455
g66
(dp3456
g74
I4
ssg75
g3450
sg68
(lp3457
g61
(g70
g63
NtRp3458
(dp3459
g66
(dp3460
g74
I3
ssg75
Nsg68
(lp3461
g61
(g77
g63
NtRp3462
(dp3463
g66
(dp3464
sg75
g3458
sg68
(lp3465
g61
(g82
g63
NtRp3466
(dp3467
g66
(dp3468
sg75
g3462
sg68
(lp3469
g61
(g62
g63
NtRp3470
(dp3471
g66
(dp3472
g74
I3
ssg75
g3466
sg68
(lp3473
cgluon.languages
lazyT_unpickle
p3474
(S't\x04\x00\x00\x00site'
tRp3475
asbasbasbag61
(g77
g63
NtRp3476
(dp3477
g66
(dp3478
sg75
g3458
sg68
(lp3479
g61
(g82
g63
NtRp3480
(dp3481
g66
(dp3482
sg75
g3476
sg68
(lp3483
g61
(g62
g63
NtRp3484
(dp3485
g66
(dp3486
g74
I3
ssg75
g3480
sg68
(lp3487
g104
asbasbasbag61
(g77
g63
NtRp3488
(dp3489
g66
(dp3490
sg75
g3458
sg68
(lp3491
g61
(g82
g63
NtRp3492
(dp3493
g66
(dp3494
sg75
g3488
sg68
(lp3495
g61
(g62
g63
NtRp3496
(dp3497
g66
(dp3498
g74
I3
ssg75
g3492
sg68
(lp3499
S'/admin/default/site'
p3500
asbasbasbasbasbasbasbag61
(g77
g63
NtRp3501
(dp3502
g66
(dp3503
sg75
g3442
sg68
(lp3504
g61
(g82
g63
NtRp3505
(dp3506
g66
(dp3507
sg75
g3501
sg68
(lp3508
g61
(g62
g63
NtRp3509
(dp3510
g66
(dp3511
g74
I4
ssg75
g3505
sg68
(lp3512
g61
(g70
g63
NtRp3513
(dp3514
g66
(dp3515
g74
I3
ssg75
Nsg68
(lp3516
g61
(g77
g63
NtRp3517
(dp3518
g66
(dp3519
sg75
g3513
sg68
(lp3520
g61
(g82
g63
NtRp3521
(dp3522
g66
(dp3523
sg75
g3517
sg68
(lp3524
g61
(g62
g63
NtRp3525
(dp3526
g66
(dp3527
g74
I3
ssg75
g3521
sg68
(lp3528
g3474
(S't\x06\x00\x00\x00logout'
tRp3529
asbasbasbag61
(g77
g63
NtRp3530
(dp3531
g66
(dp3532
sg75
g3513
sg68
(lp3533
g61
(g82
g63
NtRp3534
(dp3535
g66
(dp3536
sg75
g3530
sg68
(lp3537
g61
(g62
g63
NtRp3538
(dp3539
g66
(dp3540
g74
I3
ssg75
g3534
sg68
(lp3541
g104
asbasbasbag61
(g77
g63
NtRp3542
(dp3543
g66
(dp3544
sg75
g3513
sg68
(lp3545
g61
(g82
g63
NtRp3546
(dp3547
g66
(dp3548
sg75
g3542
sg68
(lp3549
g61
(g62
g63
NtRp3550
(dp3551
g66
(dp3552
g74
I3
ssg75
g3546
sg68
(lp3553
S'/admin/default/logout'
p3554
asbasbasbasbasbasbasbag61
(g77
g63
NtRp3555
(dp3556
g66
(dp3557
sg75
g3442
sg68
(lp3558
g61
(g82
g63
NtRp3559
(dp3560
g66
(dp3561
sg75
g3555
sg68
(lp3562
g61
(g62
g63
NtRp3563
(dp3564
g66
(dp3565
g74
I4
ssg75
g3559
sg68
(lp3566
g61
(g70
g63
NtRp3567
(dp3568
g66
(dp3569
g74
I3
ssg75
Nsg68
(lp3570
g61
(g77
g63
NtRp3571
(dp3572
g66
(dp3573
sg75
g3567
sg68
(lp3574
g61
(g82
g63
NtRp3575
(dp3576
g66
(dp3577
sg75
g3571
sg68
(lp3578
g61
(g62
g63
NtRp3579
(dp3580
g66
(dp3581
g74
I3
ssg75
g3575
sg68
(lp3582
g3474
(S't\x04\x00\x00\x00help'
tRp3583
asbasbasbag61
(g77
g63
NtRp3584
(dp3585
g66
(dp3586
sg75
g3567
sg68
(lp3587
g61
(g82
g63
NtRp3588
(dp3589
g66
(dp3590
sg75
g3584
sg68
(lp3591
g61
(g62
g63
NtRp3592
(dp3593
g66
(dp3594
g74
I3
ssg75
g3588
sg68
(lp3595
g104
asbasbasbag61
(g77
g63
NtRp3596
(dp3597
g66
(dp3598
sg75
g3567
sg68
(lp3599
g61
(g82
g63
NtRp3600
(dp3601
g66
(dp3602
sg75
g3596
sg68
(lp3603
g61
(g62
g63
NtRp3604
(dp3605
g66
(dp3606
g74
I3
ssg75
g3600
sg68
(lp3607
S'/examples/default/index'
p3608
asbasbasbasbasbasbasbasbasbasbasbag61
(g77
g63
NtRp3609
(dp3610
g66
(dp3611
sg75
g2954
sg68
(lp3612
g61
(g82
g63
NtRp3613
(dp3614
g66
(dp3615
g86
g87
ssg75
g3609
sg68
(lp3616
S'meta'
p3617
asbag61
(g82
g63
NtRp3618
(dp3619
g66
(dp3620
g93
g94
ssg75
g3609
sg68
(lp3621
S':'
asbag61
(g82
g63
NtRp3622
(dp3623
g66
(dp3624
sg75
g3609
sg68
(lp3625
g61
(g62
g63
NtRp3626
(dp3627
g66
(dp3628
g74
I5
ssg75
g3622
sg68
(lp3629
g61
(g70
g63
NtRp3630
(dp3631
g66
(dp3632
g74
I4
ssg75
Nsg68
(lp3633
sbasbasbasbag61
(g77
g63
NtRp3634
(dp3635
g66
(dp3636
sg75
g2954
sg68
(lp3637
g61
(g82
g63
NtRp3638
(dp3639
g66
(dp3640
g86
g87
ssg75
g3634
sg68
(lp3641
S'postprocessing'
p3642
asbag61
(g82
g63
NtRp3643
(dp3644
g66
(dp3645
g93
g94
ssg75
g3634
sg68
(lp3646
S':'
asbag61
(g82
g63
NtRp3647
(dp3648
g66
(dp3649
sg75
g3634
sg68
(lp3650
g61
(g62
g63
NtRp3651
(dp3652
g66
(dp3653
g74
I5
ssg75
g3647
sg68
(lp3654
g61
(g70
g63
NtRp3655
(dp3656
g66
(dp3657
g74
I4
ssg75
Nsg68
(lp3658
sbasbasbasbag61
(g77
g63
NtRp3659
(dp3660
g66
(dp3661
sg75
g2954
sg68
(lp3662
g61
(g82
g63
NtRp3663
(dp3664
g66
(dp3665
g86
g87
ssg75
g3659
sg68
(lp3666
S'session_file'
p3667
asbag61
(g82
g63
NtRp3668
(dp3669
g66
(dp3670
g93
g94
ssg75
g3659
sg68
(lp3671
S':'
asbag61
(g82
g63
NtRp3672
(dp3673
g66
(dp3674
sg75
g3659
sg68
(lp3675
g61
(g62
g63
NtRp3676
(dp3677
g66
(dp3678
g74
I5
ssg75
g3672
sg68
(lp3679
S"<open file '/home/henry/Workspace/invent/final/web2py/applications/admin/sessions/127.0.0.1-b921e8e0-1e24-4548-8c69-4bdf184e7479', mode 'rb+' at 0x8d0d5f8>"
p3680
asbasbasbag61
(g77
g63
NtRp3681
(dp3682
g66
(dp3683
sg75
g2954
sg68
(lp3684
g61
(g82
g63
NtRp3685
(dp3686
g66
(dp3687
g86
g87
ssg75
g3681
sg68
(lp3688
S'session_filename'
p3689
asbag61
(g82
g63
NtRp3690
(dp3691
g66
(dp3692
g93
g94
ssg75
g3681
sg68
(lp3693
S':'
asbag61
(g82
g63
NtRp3694
(dp3695
g66
(dp3696
sg75
g3681
sg68
(lp3697
g61
(g62
g63
NtRp3698
(dp3699
g66
(dp3700
g74
I5
ssg75
g3694
sg68
(lp3701
S'/home/henry/Workspace/invent/final/web2py/applications/admin/sessions/127.0.0.1-b921e8e0-1e24-4548-8c69-4bdf184e7479'
p3702
asbasbasbag61
(g77
g63
NtRp3703
(dp3704
g66
(dp3705
sg75
g2954
sg68
(lp3706
g61
(g82
g63
NtRp3707
(dp3708
g66
(dp3709
g86
g87
ssg75
g3703
sg68
(lp3710
S'session_id'
p3711
asbag61
(g82
g63
NtRp3712
(dp3713
g66
(dp3714
g93
g94
ssg75
g3703
sg68
(lp3715
S':'
asbag61
(g82
g63
NtRp3716
(dp3717
g66
(dp3718
sg75
g3703
sg68
(lp3719
g61
(g62
g63
NtRp3720
(dp3721
g66
(dp3722
g74
I5
ssg75
g3716
sg68
(lp3723
S'127.0.0.1-b921e8e0-1e24-4548-8c69-4bdf184e7479'
p3724
asbasbasbag61
(g77
g63
NtRp3725
(dp3726
g66
(dp3727
sg75
g2954
sg68
(lp3728
g61
(g82
g63
NtRp3729
(dp3730
g66
(dp3731
g86
g87
ssg75
g3725
sg68
(lp3732
S'session_id_name'
p3733
asbag61
(g82
g63
NtRp3734
(dp3735
g66
(dp3736
g93
g94
ssg75
g3725
sg68
(lp3737
S':'
asbag61
(g82
g63
NtRp3738
(dp3739
g66
(dp3740
sg75
g3725
sg68
(lp3741
g61
(g62
g63
NtRp3742
(dp3743
g66
(dp3744
g74
I5
ssg75
g3738
sg68
(lp3745
g3011
asbasbasbag61
(g77
g63
NtRp3746
(dp3747
g66
(dp3748
sg75
g2954
sg68
(lp3749
g61
(g82
g63
NtRp3750
(dp3751
g66
(dp3752
g86
g87
ssg75
g3746
sg68
(lp3753
S'session_locked'
p3754
asbag61
(g82
g63
NtRp3755
(dp3756
g66
(dp3757
g93
g94
ssg75
g3746
sg68
(lp3758
S':'
asbag61
(g82
g63
NtRp3759
(dp3760
g66
(dp3761
sg75
g3746
sg68
(lp3762
g61
(g62
g63
NtRp3763
(dp3764
g66
(dp3765
g74
I5
ssg75
g3759
sg68
(lp3766
g1781
asbasbasbag61
(g77
g63
NtRp3767
(dp3768
g66
(dp3769
sg75
g2954
sg68
(lp3770
g61
(g82
g63
NtRp3771
(dp3772
g66
(dp3773
g86
g87
ssg75
g3767
sg68
(lp3774
S'session_new'
p3775
asbag61
(g82
g63
NtRp3776
(dp3777
g66
(dp3778
g93
g94
ssg75
g3767
sg68
(lp3779
S':'
asbag61
(g82
g63
NtRp3780
(dp3781
g66
(dp3782
sg75
g3767
sg68
(lp3783
g61
(g62
g63
NtRp3784
(dp3785
g66
(dp3786
g74
I5
ssg75
g3780
sg68
(lp3787
g104
asbasbasbag61
(g77
g63
NtRp3788
(dp3789
g66
(dp3790
sg75
g2954
sg68
(lp3791
g61
(g82
g63
NtRp3792
(dp3793
g66
(dp3794
g86
g87
ssg75
g3788
sg68
(lp3795
S'status'
p3796
asbag61
(g82
g63
NtRp3797
(dp3798
g66
(dp3799
g93
g94
ssg75
g3788
sg68
(lp3800
S':'
asbag61
(g82
g63
NtRp3801
(dp3802
g66
(dp3803
sg75
g3788
sg68
(lp3804
g61
(g62
g63
NtRp3805
(dp3806
g66
(dp3807
g74
I5
ssg75
g3801
sg68
(lp3808
S'200'
p3809
asbasbasbag61
(g77
g63
NtRp3810
(dp3811
g66
(dp3812
sg75
g2954
sg68
(lp3813
g61
(g82
g63
NtRp3814
(dp3815
g66
(dp3816
g86
g87
ssg75
g3810
sg68
(lp3817
S'subtitle'
p3818
asbag61
(g82
g63
NtRp3819
(dp3820
g66
(dp3821
g93
g94
ssg75
g3810
sg68
(lp3822
S':'
asbag61
(g82
g63
NtRp3823
(dp3824
g66
(dp3825
sg75
g3810
sg68
(lp3826
g61
(g62
g63
NtRp3827
(dp3828
g66
(dp3829
g74
I5
ssg75
g3823
sg68
(lp3830
S'admin'
p3831
asbasbasbag61
(g77
g63
NtRp3832
(dp3833
g66
(dp3834
sg75
g2954
sg68
(lp3835
g61
(g82
g63
NtRp3836
(dp3837
g66
(dp3838
g86
g87
ssg75
g3832
sg68
(lp3839
S'title'
p3840
asbag61
(g82
g63
NtRp3841
(dp3842
g66
(dp3843
g93
g94
ssg75
g3832
sg68
(lp3844
S':'
asbag61
(g82
g63
NtRp3845
(dp3846
g66
(dp3847
sg75
g3832
sg68
(lp3848
g61
(g62
g63
NtRp3849
(dp3850
g66
(dp3851
g74
I5
ssg75
g3845
sg68
(lp3852
S'design '
p3853
asbasbasbag61
(g77
g63
NtRp3854
(dp3855
g66
(dp3856
sg75
g2954
sg68
(lp3857
g61
(g82
g63
NtRp3858
(dp3859
g66
(dp3860
g86
g87
ssg75
g3854
sg68
(lp3861
g2105
asbag61
(g82
g63
NtRp3862
(dp3863
g66
(dp3864
g93
g94
ssg75
g3854
sg68
(lp3865
S':'
asbag61
(g82
g63
NtRp3866
(dp3867
g66
(dp3868
sg75
g3854
sg68
(lp3869
g61
(g62
g63
NtRp3870
(dp3871
g66
(dp3872
g74
I5
ssg75
g3866
sg68
(lp3873
g2118
asbasbasbag61
(g77
g63
NtRp3874
(dp3875
g66
(dp3876
sg75
g2954
sg68
(lp3877
g61
(g82
g63
NtRp3878
(dp3879
g66
(dp3880
g86
g87
ssg75
g3874
sg68
(lp3881
S'view'
p3882
asbag61
(g82
g63
NtRp3883
(dp3884
g66
(dp3885
g93
g94
ssg75
g3874
sg68
(lp3886
S':'
asbag61
(g82
g63
NtRp3887
(dp3888
g66
(dp3889
sg75
g3874
sg68
(lp3890
g61
(g62
g63
NtRp3891
(dp3892
g66
(dp3893
g74
I5
ssg75
g3887
sg68
(lp3894
S'default/design.html'
p3895
asbasbasbasbasbsS'locals'
p3896
(dp3897
S'languages'
p3898
S'[]'
p3899
sS'cronfolder'
p3900
S"'/home/henry/Workspace/invent/final/web2py/applications/None/cron'"
p3901
sS'extend'
p3902
g18
sS'views'
p3903
S'[]'
p3904
sS'models'
p3905
S'[]'
p3906
sS'app'
p3907
S'None'
p3908
sS'functions'
p3909
g18
sS'modules'
p3910
S'[]'
p3911
sS'statics'
p3912
S'[]'
p3913
sS'controllers'
p3914
S'[]'
p3915
sS'include'
p3916
g18
sS'defines'
p3917
g18
sssS'traceback'
p3918
S'Traceback (most recent call last):\n  File "/home/henry/Workspace/invent/final/web2py/gluon/restricted.py", line 192, in restricted\n    exec ccode in environment\n  File "/home/henry/Workspace/invent/final/web2py/applications/admin/controllers/default.py", line 1210, in <module>\n  File "/home/henry/Workspace/invent/final/web2py/gluon/globals.py", line 137, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/henry/Workspace/invent/final/web2py/applications/admin/controllers/default.py", line 730, in design\n    if not os.path.exists(cronfolder): os.mkdir(cronfolder)\nOSError: [Errno 2] No such file or directory: \'/home/henry/Workspace/invent/final/web2py/applications/None/cron\'\n'
p3919
s.